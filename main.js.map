{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-layout/_nav.ts","webpack:///./src/app/admin/admin-layout/admin-layout.component.css","webpack:///./src/app/admin/admin-layout/admin-layout.component.html","webpack:///./src/app/admin/admin-layout/admin-layout.component.ts","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/bazaar-value-settings/bazaar-value-settings.component.css","webpack:///./src/app/admin/bazaar-value-settings/bazaar-value-settings.component.html","webpack:///./src/app/admin/bazaar-value-settings/bazaar-value-settings.component.ts","webpack:///./src/app/admin/btc-received/btc-received.component.css","webpack:///./src/app/admin/btc-received/btc-received.component.html","webpack:///./src/app/admin/btc-received/btc-received.component.ts","webpack:///./src/app/admin/btc-sent/btc-sent.component.css","webpack:///./src/app/admin/btc-sent/btc-sent.component.html","webpack:///./src/app/admin/btc-sent/btc-sent.component.ts","webpack:///./src/app/admin/dashboard/dashboard.component.css","webpack:///./src/app/admin/dashboard/dashboard.component.html","webpack:///./src/app/admin/dashboard/dashboard.component.ts","webpack:///./src/app/admin/edit-multiplier/edit-multiplier.component.css","webpack:///./src/app/admin/edit-multiplier/edit-multiplier.component.html","webpack:///./src/app/admin/edit-multiplier/edit-multiplier.component.ts","webpack:///./src/app/admin/login/login.component.css","webpack:///./src/app/admin/login/login.component.html","webpack:///./src/app/admin/login/login.component.ts","webpack:///./src/app/admin/logout/logout.component.css","webpack:///./src/app/admin/logout/logout.component.html","webpack:///./src/app/admin/logout/logout.component.ts","webpack:///./src/app/admin/order-table/order-table.component.css","webpack:///./src/app/admin/order-table/order-table.component.html","webpack:///./src/app/admin/order-table/order-table.component.ts","webpack:///./src/app/admin/users-list/users-list.component.css","webpack:///./src/app/admin/users-list/users-list.component.html","webpack:///./src/app/admin/users-list/users-list.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/bazaar.service.ts","webpack:///./src/app/client/about/about.component.css","webpack:///./src/app/client/about/about.component.html","webpack:///./src/app/client/about/about.component.ts","webpack:///./src/app/client/bazaar/bazaar-product-edit/bazaar-product-edit.component.css","webpack:///./src/app/client/bazaar/bazaar-product-edit/bazaar-product-edit.component.html","webpack:///./src/app/client/bazaar/bazaar-product-edit/bazaar-product-edit.component.ts","webpack:///./src/app/client/bazaar/bazaar-product/bazaar-product.component.css","webpack:///./src/app/client/bazaar/bazaar-product/bazaar-product.component.html","webpack:///./src/app/client/bazaar/bazaar-product/bazaar-product.component.ts","webpack:///./src/app/client/bazaar/personal-agent-savings/personal-agent-savings.component.css","webpack:///./src/app/client/bazaar/personal-agent-savings/personal-agent-savings.component.html","webpack:///./src/app/client/bazaar/personal-agent-savings/personal-agent-savings.component.ts","webpack:///./src/app/client/bazaar/pre-checkout-orders/pre-checkout-orders.component.css","webpack:///./src/app/client/bazaar/pre-checkout-orders/pre-checkout-orders.component.html","webpack:///./src/app/client/bazaar/pre-checkout-orders/pre-checkout-orders.component.ts","webpack:///./src/app/client/client-layout/client-layout.component.css","webpack:///./src/app/client/client-layout/client-layout.component.html","webpack:///./src/app/client/client-layout/client-layout.component.ts","webpack:///./src/app/client/client-routing.module.ts","webpack:///./src/app/client/contact-us/contact-us.component.css","webpack:///./src/app/client/contact-us/contact-us.component.html","webpack:///./src/app/client/contact-us/contact-us.component.ts","webpack:///./src/app/client/convert1/convert1.component.css","webpack:///./src/app/client/convert1/convert1.component.html","webpack:///./src/app/client/convert1/convert1.component.ts","webpack:///./src/app/client/convert2/convert2.component.css","webpack:///./src/app/client/convert2/convert2.component.html","webpack:///./src/app/client/convert2/convert2.component.ts","webpack:///./src/app/client/crypto-bazaar/crypto-bazaar.component.css","webpack:///./src/app/client/crypto-bazaar/crypto-bazaar.component.html","webpack:///./src/app/client/crypto-bazaar/crypto-bazaar.component.ts","webpack:///./src/app/client/dashboard/dashboard.component.css","webpack:///./src/app/client/dashboard/dashboard.component.html","webpack:///./src/app/client/dashboard/dashboard.component.ts","webpack:///./src/app/client/faq/faq.component.css","webpack:///./src/app/client/faq/faq.component.html","webpack:///./src/app/client/faq/faq.component.ts","webpack:///./src/app/client/forgot-password/forgot-password.component.css","webpack:///./src/app/client/forgot-password/forgot-password.component.html","webpack:///./src/app/client/forgot-password/forgot-password.component.ts","webpack:///./src/app/client/home/home.component.css","webpack:///./src/app/client/home/home.component.html","webpack:///./src/app/client/home/home.component.ts","webpack:///./src/app/client/how-it-works/how-it-works.component.css","webpack:///./src/app/client/how-it-works/how-it-works.component.html","webpack:///./src/app/client/how-it-works/how-it-works.component.ts","webpack:///./src/app/client/login/login.component.css","webpack:///./src/app/client/login/login.component.html","webpack:///./src/app/client/login/login.component.ts","webpack:///./src/app/client/openorder/openorder.component.css","webpack:///./src/app/client/openorder/openorder.component.html","webpack:///./src/app/client/openorder/openorder.component.ts","webpack:///./src/app/client/register/register.component.css","webpack:///./src/app/client/register/register.component.html","webpack:///./src/app/client/register/register.component.ts","webpack:///./src/app/client/successfulorder/successfulorder.component.css","webpack:///./src/app/client/successfulorder/successfulorder.component.html","webpack:///./src/app/client/successfulorder/successfulorder.component.ts","webpack:///./src/app/client/txhistory/txhistory.component.css","webpack:///./src/app/client/txhistory/txhistory.component.html","webpack:///./src/app/client/txhistory/txhistory.component.ts","webpack:///./src/app/client/withdrawal/withdrawal.component.css","webpack:///./src/app/client/withdrawal/withdrawal.component.html","webpack:///./src/app/client/withdrawal/withdrawal.component.ts","webpack:///./src/app/model/currency.ts","webpack:///./src/app/services/admin.service.ts","webpack:///./src/app/services/contact.service.ts","webpack:///./src/app/services/country-currency-price.service.ts","webpack:///./src/app/services/forgotpw.service.ts","webpack:///./src/app/services/http.service.ts","webpack:///./src/app/services/mock.service.ts","webpack:///./src/app/services/share.service.ts","webpack:///./src/app/services/socket.service.ts","webpack:///./src/app/services/storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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G,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAAG,KAAK,CAAC;QACX,OAAE,GAA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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"admin-admin-module\"\n\t],\n\t\"./client/client.module\": [\n\t\t\"./src/app/client/client.module.ts\",\n\t\t\"client-client-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","export const navItems = [\r\n  {\r\n    name: 'Dashboard',\r\n    url: '/admin/dashboard',\r\n    icon: 'icon-cursor',\r\n  },\r\n  {\r\n    name: 'Users List',\r\n    url: '/admin/users-list',\r\n    icon: 'icon-people'\r\n  },\r\n  {\r\n    name: 'BTC Received',\r\n    url: '/admin/btc-received',\r\n    icon: 'icon-arrow-left-circle'\r\n  },\r\n  {\r\n    name: 'BTC Sent',\r\n    url: '/admin/btc-sent',\r\n    icon: 'icon-arrow-right-circle',\r\n  },\r\n  {\r\n    name: 'BTC To LC Successful',\r\n    url: '/admin/btc-to-lc-success',\r\n    icon: 'icon-check',\r\n  },\r\n  {\r\n    name: 'LC To BTC Successful',\r\n    url: '/admin/lc-to-btc-success',\r\n    icon: 'icon-check',\r\n  },\r\n  {\r\n    name: 'All Conversion Tx',\r\n    url: '/admin/all-conversion',\r\n    icon: 'icon-plus',\r\n  },\r\n  {\r\n    name: 'Cancelled Conversion',\r\n    url: '/admin/cancelled-conversion',\r\n    icon: 'icon-close',\r\n  },\r\n  {\r\n    name: 'Open Orders',\r\n    url: '/admin/open-orders',\r\n    icon: 'icon-clock',\r\n  },\r\n  {\r\n    name: 'Edit Multiplier',\r\n    url: '/admin/edit-multiplier',\r\n    icon: 'icon-settings'\r\n  },\r\n  {\r\n    name: 'Bazaar Value Settings',\r\n    url: '/admin/bazaar-value-settings',\r\n    icon: 'icon-settings'\r\n  },\r\n  {\r\n    name: 'Logout',\r\n    url: '/admin/logout',\r\n    icon: 'icon-logout',\r\n  }\r\n];\r\n","module.exports = \".app-header{\\r\\n\\tbackground-color: #2f353a;\\r\\n\\tborder-bottom: none;\\r\\n}\\r\\n.dropdown-item:hover{\\r\\n\\tcolor: black;\\r\\n}\"","module.exports = \"<nav class=\\\"site-header py-1 app-header navbar\\\">\\r\\n    <div class=\\\"container-fluid d-flex flex-row justify-content-between\\\">\\r\\n        <div class=\\\"d-flex flex-row\\\">\\r\\n            <a class=\\\"py-2 mr-4\\\" href=\\\"#\\\">\\r\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"d-block mx-auto\\\">\\r\\n                  <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"></circle>\\r\\n                  <line x1=\\\"14.31\\\" y1=\\\"8\\\" x2=\\\"20.05\\\" y2=\\\"17.94\\\"></line>\\r\\n                  <line x1=\\\"9.69\\\" y1=\\\"8\\\" x2=\\\"21.17\\\" y2=\\\"8\\\"></line>\\r\\n                  <line x1=\\\"7.38\\\" y1=\\\"12\\\" x2=\\\"13.12\\\" y2=\\\"2.06\\\"></line>\\r\\n                  <line x1=\\\"9.69\\\" y1=\\\"16\\\" x2=\\\"3.95\\\" y2=\\\"6.06\\\"></line>\\r\\n                  <line x1=\\\"14.31\\\" y1=\\\"16\\\" x2=\\\"2.83\\\" y2=\\\"16\\\"></line>\\r\\n                  <line x1=\\\"16.62\\\" y1=\\\"12\\\" x2=\\\"10.88\\\" y2=\\\"21.94\\\"></line>\\r\\n                </svg>\\r\\n            </a>\\r\\n            <div class=\\\"btn-group\\\">\\r\\n                <a class=\\\"py-2 btn btn-dark\\\" [routerLink]=\\\"['/admin/dashboard']\\\">Dashboard</a>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-dark dropdown-toggle dropdown-toggle-split d-block d-lg-none\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                   <span class=\\\"sr-only\\\">Toggle Dropdown</span>\\r\\n                </button>\\r\\n                <div class=\\\"dropdown-menu\\\">\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/users-list']\\\">Users List</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/btc-received']\\\">BTC Received</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/btc-sent']\\\">BTC Sent</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/btc-to-lc-success']\\\">BTC To LC Successful</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/lc-to-btc-success']\\\">LC To BTC Successful</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/all-conversion']\\\">All Conversion Tx</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/cancelled-conversion']\\\">Cancelled Conversion</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/open-orders']\\\">Open Orders</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/edit-multiplier']\\\">Edit Multiplier</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/bazaar-value-settings']\\\">Bazaar Value Settings</a>\\r\\n                    <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/admin/logout']\\\">Logout</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <form class=\\\"form-inline my-0\\\">\\r\\n            <a [routerLink]=\\\"['/admin/logout']\\\">\\r\\n                <button class=\\\"btn btn-outline-info my-0\\\" type=\\\"button\\\">Logout</button>\\r\\n            </a>\\r\\n        </form>\\r\\n    </div>\\r\\n</nav>\\r\\n<div class=\\\"app-body\\\">\\r\\n    <app-sidebar [fixed]=\\\"true\\\" [display]=\\\"'lg'\\\">\\r\\n        <app-sidebar-nav [navItems]=\\\"navItems\\\"></app-sidebar-nav>\\r\\n        <app-sidebar-minimizer></app-sidebar-minimizer>\\r\\n    </app-sidebar>\\r\\n    <main class=\\\"main my-3\\\">\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n        </div>\\r\\n    </main>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { navItems } from './_nav';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.css']\n})\nexport class AdminLayoutComponent implements OnInit {\n\t\n  public navItems = navItems;\n\n  constructor(\n  \t\n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport { Routes, RouterModule, CanActivate, Router } from '@angular/router';\nimport { AdminLayoutComponent } from './admin-layout/admin-layout.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { StorageService } from '../services/storage.service';\nimport { OrderTableComponent } from './order-table/order-table.component';\nimport { BtcReceivedComponent } from './btc-received/btc-received.component';\nimport { BtcSentComponent } from './btc-sent/btc-sent.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { EditMultiplierComponent } from './edit-multiplier/edit-multiplier.component';\nimport { BazaarValueSettingsComponent } from './bazaar-value-settings/bazaar-value-settings.component';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\tconstructor(private storage: StorageService, private router: Router) { }\n\tcanActivate() {\n\t\tif (!this.storage.getAdminUser() /* check user logged or not */) {\n\t\t\tthis.router.navigate(['/admin/login']);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: AdminLayoutComponent,\n\t\tcanActivate: [AdminGuard],\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tredirectTo: 'dashboard',\n\t\t\t\tpathMatch: 'full'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'dashboard',\n\t\t\t\tcomponent: DashboardComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'btc-received',\n\t\t\t\tcomponent: BtcReceivedComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'btc-sent',\n\t\t\t\tcomponent: BtcSentComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'users-list',\n\t\t\t\tcomponent: UsersListComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'btc-to-lc-success',\n\t\t\t\tcomponent: OrderTableComponent,\n\t\t\t\tdata: { display: 'btc-to-lc-success' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'lc-to-btc-success',\n\t\t\t\tcomponent: OrderTableComponent,\n\t\t\t\tdata: { display: 'lc-to-btc-success' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'all-conversion',\n\t\t\t\tcomponent: OrderTableComponent,\n\t\t\t\tdata: { display: 'all-conversion' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'cancelled-conversion',\n\t\t\t\tcomponent: OrderTableComponent,\n\t\t\t\tdata: { display: 'cancelled-conversion' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'open-orders',\n\t\t\t\tcomponent: OrderTableComponent,\n\t\t\t\tdata: { display: 'open-orders' }\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'edit-multiplier',\n\t\t\t\tcomponent: EditMultiplierComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'bazaar-value-settings',\n\t\t\t\tcomponent: BazaarValueSettingsComponent\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tpath: 'login',\n\t\tcomponent: LoginComponent\n\t},\n\t{\n\t\tpath: 'logout',\n\t\tcomponent: LogoutComponent\n\t}\n];\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <form class=\\\"col-md-6 col-lg-3\\\" (ngSubmit)=\\\"save()\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>Display Bazaar Signup After Reach Target BTC Conversion</label>\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"btc_conversion_target\\\" [(ngModel)]=\\\"btc_conversion_target\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Refill Products If Availability Reach To</label>\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"refill_product_availavility\\\" [(ngModel)]=\\\"refill_product_availavility\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Bazaar LC Maintaining Balance</label>\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"lc_maintaining_balance\\\" [(ngModel)]=\\\"lc_maintaining_balance\\\">\\n        </div>\\n        <div class=\\\"alert alert-success\\\" *ngIf=\\\"showSuccess == true\\\">\\n            {{ success.message }}\\n        </div>\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"showError == true\\\">\\n            {{ error.message }}\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Save\\\">\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { ShareService } from '../../services/share.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-bazaar-value-settings',\n  templateUrl: './bazaar-value-settings.component.html',\n  styleUrls: ['./bazaar-value-settings.component.css']\n})\nexport class BazaarValueSettingsComponent implements OnInit {\n\n  constructor(private api: HttpService, private share: ShareService, private toastr: ToastrService) { }\n\n  btc_conversion_target = 0;\n  refill_product_availavility = 0;\n  lc_maintaining_balance = 0;\n  showSuccess = false;\n  success = { message: '' };\n  showError = false;\n  error = { message: '' };\n\n  ngOnInit() {\n    this.api.getToBackend('/admin/getBazaarValueSettings', this.share.admin_user.token).then((response: any) => {\n      // console.log(response);\n      this.btc_conversion_target = response.BtcConversionTarget;\n      this.refill_product_availavility = response.RefillProductAvailavility;\n      this.lc_maintaining_balance = response.LcMaintainingBalance;\n    });\n  }\n\n  save() {\n    this.showError = false;\n    this.showSuccess = false;\n\n    this.api.postToBackend('/admin/setBazaarValueSettings',\n    { BtcConversionTarget: this.btc_conversion_target,\n      RefillProductAvailavility: this.refill_product_availavility,\n      LcMaintainingBalance: this.lc_maintaining_balance\n    }, this.share.admin_user.token).then((response: any) => {\n      if (response.status === 'success') {\n        this.success.message = 'Successfully saved!';\n        this.toastr.info('Bazaar Value Setting Success!', 'INFO');\n        this.showSuccess = true;\n      }\n      if (response.status === 'error') {\n        this.showError = true;\n        this.error.message = response.payload;\n        this.toastr.error('Invalid Setting Value!', 'ERROR');\n      }\n      console.log(response);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-responsive-md\\\">\\n\\t<thead>\\n\\t\\t<tr>\\n\\t\\t\\t<th>ID</th>\\n\\t\\t\\t<th>Date</th>\\n\\t\\t\\t<th>User ID</th>\\n\\t\\t\\t<th>Amount</th>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let transaction of adminsocket.btc_received\\\">\\n\\t\\t\\t<td>{{transaction._id}}</td>\\n\\t\\t\\t<td style=\\\"min-width: 160px\\\">{{transaction.date | date:'yyyy/MM/dd hh:mm:ss'}}</td>\\n\\t\\t\\t<td style=\\\"min-width: 80px\\\">{{transaction.userid}}</td>\\n\\t\\t\\t<td>{{transaction.amount | number:'0.8-8'}}</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-btc-received',\n  templateUrl: './btc-received.component.html',\n  styleUrls: ['./btc-received.component.css']\n})\nexport class BtcReceivedComponent implements OnInit {\n\n  constructor(private adminsocket: AdminService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-responsive-md\\\">\\n\\t<thead>\\n\\t\\t<tr>\\n\\t\\t\\t<th>ID</th>\\n\\t\\t\\t<th>Date</th>\\n\\t\\t\\t<th>User ID</th>\\n\\t\\t\\t<th>Amount</th>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let transaction of adminsocket.btc_sent\\\">\\n\\t\\t\\t<td>{{ transaction._id }}</td>\\n\\t\\t\\t<td style=\\\"min-width: 160px\\\">{{ transaction.date  | date:'yyyy/MM/dd hh:mm:ss'}}</td>\\n\\t\\t\\t<td style=\\\"min-width: 80px\\\">{{ transaction.userid }}</td>\\n\\t\\t\\t<td>{{ transaction.amount | number:'0.8-8' }}</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-btc-sent',\n  templateUrl: './btc-sent.component.html',\n  styleUrls: ['./btc-sent.component.css']\n})\nexport class BtcSentComponent implements OnInit {\n\n  constructor(private adminsocket: AdminService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".alert{\\r\\n    word-break: break-all;\\r\\n}\"","module.exports = \"<div class=\\\"alert alert-danger\\\">\\n    1 LC : {{ adminsocket.lc_btc | number:'0.0-15' }} BTC\\n</div>\\n<div class=\\\"alert alert-danger\\\">\\n    1 BTC : {{ adminsocket.btc_usd }} USD\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Default wallet address: {{ share.admin_user.wallet }}\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Total BTC Received: {{ adminsocket.received_btc }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Total BTC Sent: {{ adminsocket.sent_btc }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Total BTC Converted To LC: {{ adminsocket.converted_btc }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Total Transfer Fee: {{ adminsocket.transfer_fee }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Total Remaining BTC: {{ adminsocket.remain_btc }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Total BTC Sent & Converted To LC: {{ adminsocket.sent_btc + adminsocket.converted_btc }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Total LC Converted to BTC: {{ adminsocket.converted_lc }} LC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Total Conversion Fee: {{ adminsocket.conversion_fee }} LC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Overall Total BTC To Receive: {{ adminsocket.receive_btc }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Convertible BTC: {{ adminsocket.converted_btc - adminsocket.receive_btc }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Overall Network Fee: {{ adminsocket.network_fee }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Overall Receivable BTC: {{ adminsocket.received_btc - adminsocket.network_fee }} BTC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            LC Adder Recorded: {{ adminsocket.adder }} LC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            LC Subtract Record: {{ adminsocket.subtracter }} LC\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-lg-6\\\">\\n        <div class=\\\"alert alert-secondary\\\">\\n            Gap Of Adder From Subtract: {{ adminsocket.adder - adminsocket.subtracter }} LC\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../services/admin.service';\nimport { ShareService } from '../../services/share.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    private adminsocket: AdminService,\n    private share: ShareService\n  ) { }\n\n  ngOnInit() { }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n\\t<form class=\\\"col-md-6 col-lg-3\\\" (ngSubmit)=\\\"save()\\\">\\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label>Adder & Subtracter Multiplier</label>\\n\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"ASmulti\\\" [(ngModel)]=\\\"ASmulti\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label>Conversion Fee Multiplier</label>\\n\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"CFmulti\\\" [(ngModel)]=\\\"CFmulti\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"alert alert-success\\\" *ngIf=\\\"showSuccess == true\\\"> \\n\\t\\t\\t{{ success.message }}\\n\\t\\t</div>\\n\\t\\t<div class=\\\"alert alert-danger\\\" *ngIf=\\\"showError == true\\\"> \\n\\t\\t\\t{{ error.message }}\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Save\\\">\\n\\t\\t</div>\\n\\t</form>\\t\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { ShareService } from '../../services/share.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-multiplier',\n  templateUrl: './edit-multiplier.component.html',\n  styleUrls: ['./edit-multiplier.component.css']\n})\nexport class EditMultiplierComponent implements OnInit {\n\n  constructor(private api: HttpService, private share: ShareService, private toastr: ToastrService) { }\n\n  ASmulti = 0;\n  CFmulti = 0;\n  showSuccess = false;\n  success = { message: '' };\n  showError = false;\n  error = { message: '' };\n\n  ngOnInit() {\n    this.api.getToBackend('/admin/getMultiplier', this.share.admin_user.token).then((response: any) => {\n      // console.log(response);\n      this.ASmulti = response.AS;\n      this.CFmulti = response.CF;\n    });\n  }\n\n  save() {\n    this.showError = false;\n    this.showSuccess = false;\n    // tslint:disable-next-line: max-line-length\n    this.api.postToBackend('/admin/setMultiplier', { AS: this.ASmulti, CF: this.CFmulti }, this.share.admin_user.token).then((response: any) => {\n      if (response.status === 'success') {\n        this.success.message = 'Successfully saved!';\n        this.toastr.info('Multiplier Setting Success!', 'INFO');\n        this.showSuccess = true;\n      }\n      if (response.status === 'error') {\n        this.showError = true;\n        this.error.message = response.payload;\n        this.toastr.error('Invalid Value!', 'ERROR');\n      }\n      console.log(response);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div>\\n    \\n  </div>\\n<form \\n  name='form' \\n  (ngSubmit)=\\\"f.form.valid && submit()\\\" \\n  #f=\\\"ngForm\\\" \\n  class='d-flex flex-wrap flex-column m-auto pt-4' novalidate>\\n  <div class='col-lg-4 col-6 m-auto'>\\n    <h1 class=\\\"text-center\\\"><span ><img style=\\\"height: 40px; margin-right: 30px;\\\" src=\\\"../../../assets/logo.png\\\"/></span>Admin Login</h1>\\n  </div>\\n\\n  <div class='input-wrap col-12 col-lg-7 m-auto'>\\n      <div \\n      class='form-group m-auto '>\\n      <label for=\\\"email\\\">Email</label>\\n      <input \\n      class='form-control' \\n      required\\n      type=\\\"email\\\" id=\\\"email\\\" name = \\\"email\\\" [(ngModel)] = 'user.email' #email=\\\"ngModel\\\">\\n    </div>\\n  <!--validate Email-->\\n    <div  *ngIf=' f.submitted && email.invalid' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n      <div *ngIf=\\\"email.errors.required\\\">\\n        <small>Email is required.</small>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class='input-wrap m-auto col-12 col-lg-7 m-auto'>\\n    <div class='form-group  m-auto'>\\n      <label for=\\\"password\\\">Password</label>\\n      <input \\n        class='form-control' \\n        type=\\\"password\\\" \\n        id=\\\"password\\\" \\n        name = \\\"password\\\" \\n        required\\n        [(ngModel)] = 'user.password'\\n        #password = 'ngModel'>\\n    </div>\\n\\n      <!--validate Password-->\\n      <div  *ngIf=' f.submitted && password.invalid' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n        <div *ngIf=\\\"password.errors.required\\\">\\n          <small>password is required.</small>\\n        </div>\\n      </div>\\n  </div>\\n  <div  *ngIf='loading'class='loading'>\\n    <img  class='img-fluid'src= 'assets/loading.gif' /> \\n  </div>\\n  <div class='input-wrap m-auto col-12 col-lg-7 m-auto'>\\n    <div  *ngIf='showError' class=\\\"alert alert-danger error-message\\\" role=\\\"alert\\\">\\n      <small>{{error.message}}</small>\\n    </div>\\n  </div>\\n  <div class=' m-auto'> \\n    <button  class='btn btn-success mt-2 '  type='submit'>Submit</button>\\n  </div>\\n</form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { Router } from '@angular/router';\nimport { ShareService } from '../../services/share.service';\nimport { StorageService } from '../../services/storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loading = false;\n  showError = false;\n  error = {\n    message: ''\n  };\n  user: User = {\n    email: '',\n    password: ''\n  };\n  constructor(\n    private http: HttpService,\n    private router: Router,\n    private storage: StorageService,\n    private share: ShareService) { }\n\n  ngOnInit() {\n    if (this.share.admin_user) {\n      this.router.navigate(['admin/dashboard']);\n    }\n  }\n\n  submit() {\n    this.loading = true;\n    this.http.postToBackend('/admin/login', this.user)\n      .then((result: any) => {\n        console.log(result);\n        const user = result.payload;\n        /* Save User To Local Storage */\n        this.storage.saveAdminUser(user);\n        this.share.updateAdminUser(user);\n        this.loading = false;\n        this.router.navigate(['admin/dashboard']);\n      })\n      .catch(err => {\n        console.log(err);\n        this.loading = false;\n        this.showError = true;\n        this.error.message = JSON.parse(err._body).payload;\n      });\n  }\n\n}\n\ninterface User {\n  email: String;\n  password: String;\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { StorageService } from '../../services/storage.service'\nimport { ShareService } from '../../services/share.service'\nimport { Router } from '@angular/router';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n  \tprivate storage: StorageService,\n    private router: Router,\n    public share: ShareService,\n    private adminsocket: AdminService\n  ) { }\n\n  ngOnInit() {\n  \tthis.storage.destroyAdminUser();\n    this.share.updateAdminUser(false);\n    this.adminsocket.disconnect();\n    this.router.navigate(['/admin/login']);\n  }\n\n}\n","module.exports = \"td.firstLetter::first-letter{\\r\\n\\ttext-transform:  uppercase;\\r\\n}\"","module.exports = \"<table class=\\\"table table-responsive-xl\\\">\\n\\t<thead>\\n\\t\\t<tr>\\n\\t\\t\\t<th>ID</th>\\n\\t\\t\\t<th style=\\\"min-width: 160px;\\\">Date</th>\\n\\t\\t\\t<th>Rate</th>\\n\\t\\t\\t<th style=\\\"min-width: 100px;\\\">LC Amount</th>\\n\\t\\t\\t<th style=\\\"min-width: 150px;\\\">BTC Amount Paid</th>\\n\\t\\t\\t<th style=\\\"min-width: 200px;\\\">Total BTC Price To Receive</th>\\n\\t\\t\\t<th style=\\\"min-width: 90px;\\\">Type</th>\\n\\t\\t\\t<th>Status</th>\\n\\t\\t\\t<th *ngIf=\\\"display == 'btc-to-lc-success' || display == 'lc-to-btc-success'\\\" style=\\\"min-width: 130px;\\\">Conversion Fee</th>\\n\\t\\t\\t<th *ngIf=\\\"display == 'btc-to-lc-success'\\\">Adder</th>\\n\\t\\t\\t<th *ngIf=\\\"display == 'lc-to-btc-success'\\\">Subtracter</th>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr *ngFor=\\\"let order of orders\\\">\\n\\t\\t\\t<td>{{ order.orderid }}</td>\\n\\t\\t\\t<td>{{ order.date | date:'yyyy/MM/dd hh:mm:ss'}}</td>\\n\\t\\t\\t<td>{{ order.rate | number:'0.8-8' }}</td>\\n\\t\\t\\t<td>{{ order.lcamount }}</td>\\n\\t\\t\\t<td>{{ order.btc_paid ? order.btc_paid : \\\"---\\\" }}</td>\\n\\t\\t\\t<td>{{ order.btc_receive ? order.btc_receive : \\\"---\\\" }}</td>\\n\\t\\t\\t<td>{{ order.type == 'ltob' ? 'LC To BTC' : 'BTC To LC' }}</td>\\n\\t\\t\\t<td class=\\\"firstLetter\\\">{{ order.status }}</td>\\n\\t\\t\\t<td *ngIf=\\\"display == 'btc-to-lc-success' || display == 'lc-to-btc-success'\\\">{{ order.fee }}</td>\\n\\t\\t\\t<td *ngIf=\\\"display == 'btc-to-lc-success' || display == 'lc-to-btc-success'\\\">{{ order.adder }}</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-order-table',\n  templateUrl: './order-table.component.html',\n  styleUrls: ['./order-table.component.css']\n})\nexport class OrderTableComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private adminservice: AdminService) { }\n  display\n  orders = []\n  ngOnInit() {\n  \tthis.route\n      .data\n      .subscribe(v => { \n        this.display = v.display;\n        \n        this.orders = this.adminservice.orders.filter(order => {\n          if(v.display == 'btc-to-lc-success') {  \n            return order.type == 'btol' && order.status == 'successful';\n          }\n          if(v.display == 'lc-to-btc-success') {\n            return order.type == 'ltob' && order.status == 'successful';\n          }\n          if(v.display == 'cancelled-conversion') {\n            return order.status == 'cancel';\n          }\n          if(v.display == 'open-orders') {\n            return order.status == 'open';\n          }\n          return true;\n        })\n      } );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-12 col-md-6\\\">\\n\\n\\n\\t\\t<div class='form-group m-auto'>\\n\\n\\t\\t    <label for=\\\"user_id\\\">User ID</label>\\n\\t\\t    <div class=\\\"input-group mb-3\\\">\\n\\t\\t\\t  <input type=\\\"text\\\" \\n\\t\\t\\t  \\t\\t class=\\\"form-control\\\" \\n\\t\\t\\t  \\t\\t placeholder=\\\"Search first name, last name, or user ID here...\\\"\\n\\t\\t\\t  \\t\\t [(ngModel)]=\\\"search_text\\\"\\n\\t\\t\\t  \\t\\t name=\\\"search_text\\\"\\n\\t\\t\\t  \\t\\t (keyup.enter)=\\\"find()\\\">\\n\\t\\t\\t  <div class=\\\"input-group-append\\\">\\n\\t\\t\\t    <button class=\\\"btn btn-outline-secondary\\\" \\n\\t\\t\\t    \\t\\ttype=\\\"button\\\" \\n\\t\\t\\t    \\t\\tid=\\\"button-addon2\\\"\\n\\t\\t\\t    \\t\\t(click)=\\\"find()\\\">\\n\\t\\t\\t    \\tFind</button>\\n\\t\\t\\t  </div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<table class=\\\"table table-responsive-sm\\\">\\n\\t\\t\\t<thead>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<th>ID</th>\\n\\t\\t\\t\\t\\t<th>First Name</th>\\n\\t\\t\\t\\t\\t<th>Last Name</th>\\n\\t\\t\\t\\t\\t<th>Email</th>\\n\\t\\t\\t\\t\\t<th>Agent ID</th>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</thead>\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr *ngFor=\\\"let user of find_users\\\" \\n\\t\\t\\t\\t\\t[ngClass]=\\\"{'table-success': user.userid==selectID}\\\" \\n\\t\\t\\t\\t\\t(click)=\\\"doSelect(user.userid)\\\">\\n\\t\\t\\t\\t\\t<td>{{user.userid}}</td>\\n\\t\\t\\t\\t\\t<td>{{user.first_name}}</td>\\n\\t\\t\\t\\t\\t<td>{{user.last_name}}</td>\\n\\t\\t\\t\\t\\t<td>{{user.email}}</td>\\n\\t\\t\\t\\t\\t<td>{{user.agent_id}}</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n\\t<div class=\\\"col-12 col-md-6\\\">\\n\\t\\t<app-user-detail [userid]=\\\"selectID\\\"></app-user-detail>\\n\\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { ShareService } from '../../services/share.service';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n\n  constructor(private api: HttpService, private share: ShareService) { }\n\n  search_text;\n  find_users = [];\n  selectID = 0;\n\n  ngOnInit() {\n  }\n\n  find(){\n  \tif(this.search_text) {\n  \t\tthis.api.postToBackend('/admin/searchUsers', { search: this.search_text }, this.share.admin_user.token).then((result: any) => {\n  \t\t\tthis.find_users = result;\n  \t\t\tif(Array.isArray(result) && result.length > 0) {\n  \t\t\t\tthis.selectID = result[0].userid;\t\n  \t\t\t}\n  \t\t\t\n  \t\t})\n  \t}\n  }\n\n  doSelect(id) {\n  \tthis.selectID = id;\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n<simple-notifications></simple-notifications>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { routes } from './app.routes';\nimport { Guard } from './client/client-routing.module';\nimport { AdminGuard } from './admin/admin-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SimpleNotificationsModule } from 'angular2-notifications';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes),\n    // tslint:disable-next-line: deprecation\n    HttpModule,\n    HttpClientModule,\n    FormsModule,\n    SimpleNotificationsModule.forRoot(),\n    ToastrModule.forRoot()\n  ],\n  providers: [Guard, AdminGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        loadChildren: './client/client.module#ClientModule'\r\n    },\r\n    {\r\n        path: 'admin',\r\n        loadChildren: './admin/admin.module#AdminModule'\r\n    }\r\n];\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BazaarService {\n\n  uri = environment.backendUrl;\n  constructor(private http: HttpClient) { }\n\n  async getBazaars(country) {\n    const res = await this.http.get(`${this.uri}/getBazaars/${country}`).toPromise();\n    return res;\n  }\n\n  async getBazaarProducts(userid) {\n    const res = await this.http.get(`${this.uri}/getBazaarProducts/${userid}`).toPromise();\n    return res;\n  }\n\n  async getPreCheckoutInfo(userid) {\n    const res = await this.http.get(`${this.uri}/getPreCheckoutInfo/${userid}`).toPromise();\n    return res;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<p>\\n\\t  about works!\\n\\t</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".alert {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0.75rem;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n    font-weight: bold;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n        <strong>Bazaar Product Edit</strong></div>\\n    <div class=\\\"card-body\\\">\\n        <form class=\\\"form-horizontal\\\" [formGroup]=\\\"bzp_angForm\\\" (ngSubmit)=\\\"submitProd(total_indirect_savings.value)\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-3 col-md-3\\\">\\n                    <div class=\\\"card text-white bg-danger text-center\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <strong>1 LC : {{ socket.lc_btc | number:'0.0-15' }} BTC</strong>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-3 col-md-3\\\">\\n                    <div class=\\\"card text-white bg-success text-center\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <strong>1 LC : {{ socket.btc_usd * socket.lc_btc | number:'0.4-4' }}</strong>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-3 col-md-3\\\">\\n                    <div class=\\\"card text-white bg-dark text-center\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <strong>1 BTC : {{ socket.btc_usd | number:'0.4-4' }} USD</strong>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-3 col-md-3\\\">\\n                    <div class=\\\"card text-white bg-primary text-center\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <strong>LC Balance : {{ socket.lc_balance }} LC</strong>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"bzp_photo\\\">Add Photo</label>\\n                <div class=\\\"col-md-10\\\">\\n                    <input #bzp_photo type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"bzp_photo\\\" formControlName=\\\"bzp_photo\\\" accept=\\\"image/*\\\" name=\\\"bzp_photo\\\" hidden (change)=\\\"preview(bzp_photo.files);bzp_uploader.uploadAll();\\\" ng2FileSelect [uploader]=\\\"bzp_uploader\\\" />\\n                    <img [src]=\\\"imgURL || 'http://placehold.it/350X150'\\\" height=\\\"150px;\\\" width=\\\"350px;\\\" alt=\\\"Bazaar Product Image\\\" />\\n                    <label for=\\\"bzp_photo\\\" style=\\\"margin-left: 30px;\\\"><strong>Select Photo By Clicking Here</strong></label>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"bzp_angForm.controls['bzp_photo'].invalid && (bzp_angForm.controls['bzp_photo'].dirty || bzp_angForm.controls['bzp_photo'].touched)\\\" class=\\\"alert text-center\\\">\\n                <div *ngIf=\\\"bzp_angForm.controls['bzp_photo'].errors.required\\\">\\n                    * Bazaar Product Photo is required!\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"bp_name\\\">Product Name</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"bp_name\\\" #bp_name placeholder=\\\"Enter Product Name..\\\">\\n                </div>\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"availability\\\">Availability</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" [readonly]=\\\"original_availability >= socket.RefillProductAvailavility\\\" formControlName=\\\"availability\\\" #availability placeholder=\\\"Enter number of product stock 5 or above..\\\">\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"bzp_angForm.controls['bp_name'].invalid && (bzp_angForm.controls['bp_name'].dirty || bzp_angForm.controls['bp_name'].touched)\\\" class=\\\"alert text-center\\\">\\n                <div *ngIf=\\\"bzp_angForm.controls['bp_name'].errors.required\\\">\\n                    * Product Name is required!\\n                </div>\\n                <div *ngIf=\\\"bzp_angForm.controls['bp_name'].errors.minlength\\\">\\n                    * Please more type!\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"bzp_angForm.controls['availability'].invalid && (bzp_angForm.controls['availability'].dirty || bzp_angForm.controls['availability'].touched)\\\" class=\\\"alert text-center\\\">\\n                <div *ngIf=\\\"bzp_angForm.controls['availability'].errors.required\\\">\\n                    * Availability is required!\\n                </div>\\n                <div *ngIf=\\\"bzp_angForm.controls['availability'].errors.min || bzp_angForm.controls['availability'].invalid\\\">\\n                    * Invalid Number. Availability value have to be over 5\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"initial_cc_price\\\">Initial CC Price {{ curCode }}</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" [readonly]=\\\"original_availability >= socket.RefillProductAvailavility\\\" type=\\\"text\\\" formControlName=\\\"initial_cc_price\\\" #initial_cc_price (keyup)=\\\"cc_lc_Change(initial_cc_price.value)\\\" placeholder=\\\"Enter Product price base on your country currency price..\\\">\\n                </div>\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"control_cc_price\\\">Controlled CC Price ({{ curCode }})</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #control_cc_price value=\\\"{{ auto_control_cc_price }}\\\">\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"bzp_angForm.controls['initial_cc_price'].invalid && (bzp_angForm.controls['initial_cc_price'].dirty || bzp_angForm.controls['initial_cc_price'].touched)\\\" class=\\\"alert text-center\\\">\\n                <div *ngIf=\\\"bzp_angForm.controls['initial_cc_price'].errors.required\\\">\\n                    * Initial CC Price is required!\\n                </div>\\n                <div *ngIf=\\\"bzp_angForm.controls['initial_cc_price'].errors.min || bzp_angForm.controls['initial_cc_price'].invalid\\\">\\n                    * Invalid Value. Initial CC Price must be over 0.\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"initial_lc_price\\\">Initial LC Price (LC)</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #initial_lc_price value=\\\"{{ auto_initial_lc_price / (socket.btc_usd * socket.lc_btc * currencyValue) }}\\\">\\n                </div>\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"control_lc_price\\\">Controlled LC Price (LC)</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #control_lc_price value=\\\"{{ auto_control_lc_price / (socket.btc_usd * socket.lc_btc * currencyValue) }}\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"lc_cc\\\">1 LC To Country Currency</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #lc_cc value=\\\"{{ socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4' }}\\\">\\n                </div>\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"lc_btc\\\">1 LC To BTC</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" readonly value=\\\"{{ socket.lc_btc | number:'0.0-15' }}\\\" #lc_btc>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"assigned_savings\\\">Assigned Savings</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" [readonly]=\\\"original_availability >= socket.RefillProductAvailavility\\\" type=\\\"text\\\" formControlName=\\\"assigned_savings\\\" #assigned_savings value=\\\"{{ auto_assigned_savings}}\\\" (keyup)=\\\"saving_Change(assigned_savings.value, 0)\\\" placeholder=\\\"Enter number 18 - 36..\\\">\\n                </div>\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"agent_savings\\\">Agent Savings</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" [readonly]=\\\"original_availability >= socket.RefillProductAvailavility\\\" type=\\\"text\\\" formControlName=\\\"agent_savings\\\" #agent_savings value=\\\"{{ auto_agent_savings }}\\\" (keyup)=\\\"saving_Change(agent_savings.value, 1)\\\" placeholder=\\\"Enter number 1 - 5..\\\">\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"bzp_angForm.controls['assigned_savings'].invalid && (bzp_angForm.controls['assigned_savings'].dirty)\\\" class=\\\"alert text-center\\\">\\n                <div *ngIf=\\\"bzp_angForm.controls['assigned_savings'].errors.required\\\">\\n                    * Assigned Savings is required!\\n                </div>\\n                <div *ngIf=\\\"bzp_angForm.controls['assigned_savings'].errors.min || bzp_angForm.controls['assigned_savings'].errors.max || bzp_angForm.controls['assigned_savings'].invalid\\\">\\n                    * Invalid Value. A ssigned Savings is 18 - 36\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"bzp_angForm.controls['agent_savings'].invalid && (bzp_angForm.controls['agent_savings'].dirty)\\\" class=\\\"alert text-center\\\">\\n                <div *ngIf=\\\"bzp_angForm.controls['agent_savings'].errors.required\\\">\\n                    * Agent Savings is required!\\n                </div>\\n                <div *ngIf=\\\"bzp_angForm.controls['agent_savings'].errors.min || bzp_angForm.controls['agent_savings'].errors.max || bzp_angForm.controls['agent_savings'].invalid\\\">\\n                    * Invalid Value. A gent Savings is 1 -5\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"personal_savings\\\">Personal Savings</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" readonly value=\\\"{{ auto_personal_savings }}\\\" #personal_savings>\\n                </div>\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"indirect_savings\\\">Indirect Savings</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" readonly value=\\\"{{ auto_indirect_savings }}\\\" #indirect_savings>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"total_product_costs\\\">Total Product Costs</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #total_product_costs value=\\\"{{ availability.value * initial_cc_price.value }}\\\">\\n                </div>\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"total_indirect_savings\\\">Total Indirect Savings</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #total_indirect_savings value=\\\"{{ original_availability >= socket.RefillProductAvailavility ? availability.value * initial_cc_price.value * auto_assigned_savings / 100 / (socket.btc_usd * socket.lc_btc * currencyValue) : (availability.value - original_availability) * initial_cc_price.value * auto_assigned_savings / 100 / (socket.btc_usd * socket.lc_btc * currencyValue) }}\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"bzp_type\\\">Regular Price</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"radio\\\" formControlName=\\\"bzp_type\\\" #bzp_type value=\\\"regular\\\" name=\\\"bzp_type\\\">\\n                </div>\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"bzp_type\\\">Promo Price</label>\\n                <div class=\\\"col-md-4\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"radio\\\" formControlName=\\\"bzp_type\\\" #bzp_type value=\\\"promo\\\" name=\\\"bzp_type\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group row\\\">\\n                <label class=\\\"col-md-2 col-form-label\\\" for=\\\"product_description\\\">Product Description</label>\\n                <div class=\\\"col-md-10\\\">\\n                    <textarea class=\\\"form-control\\\" rows=\\\"7\\\" formControlName=\\\"product_description\\\" #product_description placeholder=\\\"Enter Product Description..\\\"></textarea>\\n                </div>\\n            </div>\\n            <div *ngIf=\\\"bzp_angForm.controls['product_description'].invalid && (bzp_angForm.controls['product_description'].dirty || bzp_angForm.controls['product_description'].touched)\\\" class=\\\"alert text-center\\\">\\n                <div *ngIf=\\\"bzp_angForm.controls['product_description'].errors.required\\\">\\n                    * Product Description is required!\\n                </div>\\n                <div *ngIf=\\\"bzp_angForm.controls['product_description'].errors.minlength\\\">\\n                    * Please more type!\\n                </div>\\n            </div>\\n            <div *ngIf='loading' class='loading'>\\n                <img class='img-fluid' src='assets/loading.gif' alt=\\\"\\\" />\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-12 text-center\\\">\\n                    <div *ngIf=\\\"total_indirect_savings.value > socket.lc_balance; else sub_enable\\\">\\n                        <button class=\\\"btn btn-primary mt-10\\\" type=\\\"submit\\\" disabled>\\n                            Product Post\\n                        </button>\\n                        <div class=\\\"alert\\\">\\n                            * Your BTC Balance is not enough. Please charge.\\n                        </div>\\n                    </div>\\n                    <ng-template #sub_enable>\\n                        <button class=\\\"btn btn-primary mt-10\\\" type=\\\"submit\\\" [disabled]=\\\"bzp_angForm.pristine || !imgURL || bzp_angForm.controls['product_description'].invalid || bzp_angForm.controls['agent_savings'].invalid || bzp_angForm.controls['assigned_savings'].invalid || bzp_angForm.controls['initial_cc_price'].invalid || bzp_angForm.controls['availability'].invalid || bzp_angForm.controls['bp_name'].invalid\\\">\\n                            Update Product\\n                        </button>\\n                    </ng-template>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { ShareService } from 'src/app/services/share.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { environment } from '../../../../environments/environment';\nimport { FileUploader, ParsedResponseHeaders, FileItem } from 'ng2-file-upload';\nimport Currency from '../../../model/currency';\nimport { CountryCurrencyPriceService } from 'src/app/services/country-currency-price.service';\nimport { NotificationsService } from 'angular2-notifications';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-bazaar-product-edit',\n  templateUrl: './bazaar-product-edit.component.html',\n  styleUrls: ['./bazaar-product-edit.component.css']\n})\nexport class BazaarProductEditComponent implements OnInit {\n\n  @ViewChild('agent_savings') agent_savings: ElementRef;\n  @ViewChild('assigned_savings') assigned_savings: ElementRef;\n  @ViewChild('control_cc_price') control_cc_price: ElementRef;\n  @ViewChild('control_lc_price') control_lc_price: ElementRef;\n  @ViewChild('indirect_savings') indirect_savings: ElementRef;\n  @ViewChild('initial_lc_price') initial_lc_price: ElementRef;\n  @ViewChild('lc_btc') lc_btc: ElementRef;\n  @ViewChild('lc_cc') lc_cc: ElementRef;\n  @ViewChild('personal_savings') personal_savings: ElementRef;\n  @ViewChild('total_indirect_savings') total_indirect_savings: ElementRef;\n  @ViewChild('total_product_costs') total_product_costs: ElementRef;\n\n  uri = environment.backendUrl;\n  bzp_angForm: FormGroup;\n\n  auto_control_cc_price = 0;\n  auto_initial_lc_price = 0;\n  auto_control_lc_price = 0;\n  auto_indirect_savings = 8;\n  auto_assigned_savings: number;\n  auto_agent_savings: number;\n  auto_personal_savings = 0;\n  original_availability = 0;\n  bz_pro_id = 0;\n\n  userInfo: any;\n  currency: Currency = new Currency;\n  cCode = 'PH';\n  curCode = 'PHP';\n  currencyValue = 0;\n\n  imgURL: any;\n  bzp_image_name = '';\n\n  loading = false;\n\n  public bzp_uploader: FileUploader = new FileUploader({\n    url: this.uri + '/images/bazaarProd', itemAlias: 'bzp_photo', headers: [{name: 'Accept', value: 'application/json'}]\n  });\n\n  constructor(private router: ActivatedRoute, private socket: SocketService, private share: ShareService,\n    private api: HttpService, private fb: FormBuilder, private ccp: CountryCurrencyPriceService,\n    private notify: NotificationsService, private http: HttpClient) {\n      this.createForm();\n  }\n\n  createForm() {\n    // create bazaar product form\n    this.bzp_angForm = this.fb.group({\n      bp_name: ['', [Validators.required, Validators.minLength(3)]],\n      availability: ['', [Validators.required, Validators.min(5), Validators.pattern('[0-9]*')]],\n      initial_cc_price: ['', [Validators.required, Validators.min(0), Validators.pattern('[0-9]*')]],\n      assigned_savings: ['', [Validators.required, Validators.min(18), Validators.max(36), Validators.pattern('[0-9]*')]],\n      agent_savings: ['', [Validators.required, Validators.min(1), Validators.max(5), Validators.pattern('[0-9]*')]],\n      product_description: ['', Validators.required],\n      bzp_photo: ['', Validators.required],\n      bzp_type: ['', Validators.required]\n    });\n  }\n\n  preview(files) {\n    if (files.length === 0) {\n      return;\n    }\n    // console.log(files);\n    const reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      this.imgURL = reader.result;\n    };\n  }\n\n  onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    const data = JSON.parse(response);\n    // console.log(data);\n    this.bzp_image_name = data['name'];\n    // console.log(this.bzp_image_name);\n  }\n\n  onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    const error = JSON.parse(response);\n    console.log(error);\n  }\n\n  async ngOnInit() {\n    this.bzp_uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n    // for response after image uploading\n    this.bzp_uploader.onErrorItem = (item, response, status, headers) => this.onErrorItem(item, response, status, headers);\n    this.bzp_uploader.onSuccessItem = (item, response, status, headers) => this.onSuccessItem(item, response, status, headers);\n    // get product info from db\n    this.api.postToBackend('/productEdit', { bzp_id : this.router.params['_value'].id }, this.share.user.token).then(res => {\n      // console.log(res);\n      if (Object.keys(res).length === 1) {\n        this.imgURL = 'assets/' + res[0]['bzp_photo'];\n        // fill input value with product information\n        this.bzp_angForm.get('bp_name').setValue(res[0]['bp_name']);\n        this.bzp_angForm.get('availability').setValue(res[0]['availability']);\n        this.bzp_angForm.get('initial_cc_price').setValue(res[0]['initial_cc_price']);\n        this.bzp_angForm.get('assigned_savings').setValue(res[0]['assigned_savings']);\n        this.bzp_angForm.get('agent_savings').setValue(res[0]['agent_savings']);\n        this.bzp_angForm.get('product_description').setValue(res[0]['product_description']);\n        this.bzp_angForm.get('bzp_type').setValue(res[0]['bzp_type']);\n        this.cc_lc_Change(res[0]['initial_cc_price']);\n        this.auto_assigned_savings = res[0]['assigned_savings'];\n        this.auto_agent_savings = res[0]['agent_savings'];\n        this.auto_personal_savings = res[0]['assigned_savings'] - res[0]['agent_savings'] - this.auto_indirect_savings;\n        this.original_availability = res[0]['availability'];\n        this.bz_pro_id = res[0]['bz_pro_id'];\n        this.bzp_image_name = res[0]['bzp_photo'];\n      }\n    });\n    // get user country code\n    this.userInfo = await this.ccp.getUserInfo();\n    this.cCode = this.userInfo['countryCode'];\n    // get user country currency code\n    this.curCode = this.currency[`${this.cCode}`];\n    // get user country currency value\n    this.currencyValue = await this.ccp.getCurrencyValue(this.curCode);\n  }\n\n  cc_lc_Change(initial_cc_price: number) {\n    this.auto_control_cc_price = initial_cc_price;\n    this.auto_initial_lc_price = initial_cc_price;\n    this.auto_control_lc_price = initial_cc_price;\n  }\n\n  saving_Change(saving_value: number, flag: number) {\n    if (flag === 0) {\n      this.auto_assigned_savings = saving_value;\n    } else {\n      this.auto_agent_savings = saving_value;\n    }\n    this.auto_personal_savings = this.auto_assigned_savings - this.auto_agent_savings - this.auto_indirect_savings;\n  }\n\n  // update bazaar product submit\n  submitProd(total_lc_amount: number) {\n    this.loading = true;\n\n    const bz_prod_uri = this.uri + '/bzprodUpdate/' + this.bz_pro_id;\n\n    this.bzp_angForm.value.agent_savings = this.agent_savings.nativeElement.value;\n    this.bzp_angForm.value.assigned_savings = this.assigned_savings.nativeElement.value;\n    this.bzp_angForm.value.control_cc_price = this.control_cc_price.nativeElement.value;\n    this.bzp_angForm.value.control_lc_price = this.control_lc_price.nativeElement.value;\n    this.bzp_angForm.value.indirect_savings = this.indirect_savings.nativeElement.value;\n    this.bzp_angForm.value.initial_lc_price = this.initial_lc_price.nativeElement.value;\n    this.bzp_angForm.value.lc_btc = this.lc_btc.nativeElement.value;\n    this.bzp_angForm.value.lc_cc = this.lc_cc.nativeElement.value;\n    this.bzp_angForm.value.personal_savings = this.personal_savings.nativeElement.value;\n    this.bzp_angForm.value.total_indirect_savings = this.total_indirect_savings.nativeElement.value;\n    this.bzp_angForm.value.total_product_costs = this.total_product_costs.nativeElement.value;\n    this.bzp_angForm.value.bzp_photo = this.bzp_image_name;\n    const new_availability = parseInt(this.bzp_angForm.value.availability, 10);\n\n    if (this.original_availability === new_availability) {\n      // updating produt post\n      this.http.post(`${bz_prod_uri}`, this.bzp_angForm.value).subscribe(res => {\n        this.loading = false;\n        if (res['status'] === 'success') {\n          this.notify.success('INFO', 'Product Update Success!', { timeOut: 5000 });\n          this.ngOnInit();\n        }\n      });\n    } else {\n      this.api.postToBackend('/recordOrder', {\n        rate: this.socket.lc_btc,\n        amount_lc: total_lc_amount,\n        type: 'bzpost'\n      }, this.share.user.token).then(res => {\n        this.loading = false;\n        this.notify.success('INFO', 'Processing Success!', { timeOut: 5000 });\n        // updating produt post\n        this.http.post(`${bz_prod_uri}`, this.bzp_angForm.value).subscribe(rs => {\n          if (rs['status'] === 'success') {\n            this.notify.success('INFO', 'Product Update Success!', { timeOut: 5000 });\n            this.ngOnInit();\n          }\n        });\n      }).catch(err => {\n        this.notify.error('ERROR', JSON.parse(err._body).payload);\n      });\n    }\n  }\n\n}\n","module.exports = \"img {\\r\\n    border: 1px solid #ddd;\\r\\n    border-radius: 3px;\\r\\n    padding: 3px;\\r\\n    min-height: 188px;\\r\\n    max-height: 188px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0.75rem;\\r\\n}\\r\\n\\r\\n.search-hero {\\r\\n    padding-bottom: 30px;\\r\\n}\\r\\n\\r\\np {\\r\\n    font-size: 1.1rem;\\r\\n}\\r\\n\\r\\n.bz_cart_icon {\\r\\n    font-size: 1.5rem;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n.badge {\\r\\n    padding-left: 9px;\\r\\n    padding-right: 9px;\\r\\n    border-radius: 9px;\\r\\n}\\r\\n\\r\\n.label-warning[href],\\r\\n.badge-warning[href] {\\r\\n    background-color: #c67605;\\r\\n}\\r\\n\\r\\n#cart_count {\\r\\n    font-size: 15px;\\r\\n    background: #007bff;\\r\\n    color: #fff;\\r\\n    padding: 0 5px;\\r\\n    vertical-align: top;\\r\\n    margin-left: -9px;\\r\\n}\\r\\n\\r\\n.shop_title {\\r\\n    text-transform: uppercase;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\nh5 {\\r\\n    font-size: 0.75rem;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"search-hero col-md-11 col-sm-11\\\">\\n        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\" placeholder=\\\"Search product name or product description here...\\\">\\n    </div>\\n    <div class=\\\"col-md-1 col-sm-1 bz_cart_icon\\\">\\n        <a [routerLink]=\\\"['precheckout']\\\">\\n            <em class=\\\"icon-basket\\\"></em>\\n            <span class='badge badge-warning' id=\\\"cart_count\\\" name=\\\"cart_count\\\">{{ cart_count }}</span>\\n        </a>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 col-sm-12\\\">\\n        <div class=\\\"card border-dark\\\">\\n            <div class=\\\"card-body\\\">\\n                <p>\\n                    <strong>Important : </strong> Buy product to the bazaar owner which you know. The transaction of buying and selling is between buyer and seller. We are not liable to any undeliveried products or any product related issue.\\n                </p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3 col-md-3\\\">\\n        <div class=\\\"card text-white bg-primary text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <strong>LC Maintaining Balance : {{ socket.LcMaintainingBalance }} LC</strong>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-3 col-md-3\\\">\\n        <div class=\\\"card text-white bg-danger text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <strong>1 LC : {{ socket.lc_btc | number:'0.0-15' }} BTC</strong>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-3 col-md-3\\\">\\n        <div class=\\\"card text-white bg-success text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <strong>1 LC : {{ socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4' }} {{ curCode }}</strong>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-3 col-md-3\\\">\\n        <div class=\\\"card text-white bg-dark text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <strong>LC Balance : {{ socket.lc_balance }} LC</strong>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"socket.LcMaintainingBalance >= socket.lc_balance\\\">\\n    <div class=\\\"col-md-12 col-sm-12 text-center text-danger\\\">\\n        <p>\\n            * Please charge LC Balance. If your LC Balance is greater than LC Manitaining Balance, you can add product to cart.\\n        </p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 col-sm-12\\\">\\n        <h4 class=\\\"shop_title\\\">\\n            <strong>\\n              {{ bz_shop_name }}\\n          </strong>\\n        </h4>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 col-sm-12 text-center\\\" *ngIf=\\\"!bazaar_products.length; else display_products\\\">\\n        <p>\\n            * No products in this bazaar shop.\\n        </p>\\n    </div>\\n    <ng-template #display_products>\\n        <div class=\\\"col-md-3\\\" *ngFor=\\\"let bzp of bazaar_products | keyvalue | filter:searchText; let i = index\\\">\\n            <div class=\\\"card mb-4 text-white bg-dark\\\">\\n                <img class=\\\"card-img-top\\\" src=\\\"assets/{{ bzp.value.bzp_photo }}\\\" alt=\\\"bzp.value.bp_name\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">Product Name : {{ bzp.value.bp_name }}</h5>\\n                    <h5 class=\\\"card-title\\\">Initial LC Price : {{ bzp.value.initial_lc_price }} LC</h5>\\n                    <h5 class=\\\"card-title\\\">Controlled LC Price : {{ bzp.value.initial_cc_price / (socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4') }} LC</h5>\\n                    <h5 class=\\\"card-title\\\">Initial CC Price : {{ bzp.value.initial_cc_price }} {{ curCode }}</h5>\\n                    <h5 class=\\\"card-title\\\">Controlled CC Price : {{ bzp.value.initial_cc_price / (socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4') * bzp.value.lc_cc }} {{ curCode }}</h5>\\n                    <h5 class=\\\"card-title\\\">Personal Savings : {{ bzp.value.personal_savings }} %</h5>\\n                    <h5 class=\\\"card-title\\\">Agent Savings : {{ bzp.value.agent_savings }} %</h5>\\n                    <h5 class=\\\"card-title\\\">Availability : {{ bzp.value.availability }}</h5>\\n                    <h5 class=\\\"card-title\\\">1 LC To CC @ Post Priced : {{ bzp.value.lc_cc }} {{ curCode }}</h5>\\n                    <h5 class=\\\"card-title\\\">Present 1 LC to CC : {{ socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4' }} {{ curCode }}</h5>\\n                    <h5 class=\\\"card-title\\\">Present 1 LC to BTC : {{ socket.lc_btc | number:'0.0-15' }} BTC</h5>\\n                    <h5 class=\\\"card-title\\\">Product Description : {{ bzp.value.product_description | slice:0:20 }} ...</h5>\\n                    <button class=\\\"btn btn-block btn-primary\\\" [routerLink]=\\\"['product/edit/', bzp.value.bz_pro_id]\\\" *ngIf=\\\"owner_flag\\\">Edit</button>\\n                    <button class=\\\"btn btn-block btn-danger\\\" *ngIf=\\\"owner_flag\\\" data-toggle=\\\"modal\\\" attr.data-target=\\\"#confirmModal{{i}}\\\">Delete</button>\\n                    <button class=\\\"btn btn-outline-light btn-block\\\" *ngIf=\\\"!owner_flag\\\" [disabled]=\\\"socket.LcMaintainingBalance >= socket.lc_balance\\\" (click)=\\\"addToCart(bzp.value.bz_pro_id)\\\">Add To Cart</button>\\n\\n                    <div class=\\\"modal fade\\\" id=\\\"confirmModal{{i}}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"BazaarConfirmModal\\\" aria-hidden=\\\"true\\\">\\n                        <div class=\\\"modal-dialog modal-primary\\\" role=\\\"document\\\">\\n                            <div class=\\\"modal-content\\\">\\n                                <div class=\\\"modal-header\\\">\\n                                    <h4 class=\\\"modal-title\\\">Confirmation</h4>\\n                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                                    </button>\\n                                </div>\\n                                <div class=\\\"modal-body\\\">\\n                                    <div class=\\\"text-center text-dark\\\">\\n                                        <strong>Do you want to delete this product?</strong>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"modal-footer\\\">\\n                                    <button class=\\\"close\\\" data-dismiss=\\\"modal\\\" type=\\\"button\\\" (click)=\\\"product_delete(bzp.value.bz_pro_id)\\\">\\n                                        <a class=\\\"btn btn-danger\\\">Delete</a>\\n                                    </button>\\n                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">\\n                                        <a class=\\\"btn btn-secondary\\\">Cancel</a>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ShareService } from 'src/app/services/share.service';\nimport { BazaarService } from 'src/app/bazaar.service';\nimport { SocketService } from 'src/app/services/socket.service';\nimport Currency from '../../../model/currency';\nimport { CountryCurrencyPriceService } from 'src/app/services/country-currency-price.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { NotificationsService } from 'angular2-notifications';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-bazaar-product',\n  templateUrl: './bazaar-product.component.html',\n  styleUrls: ['./bazaar-product.component.css']\n})\nexport class BazaarProductComponent implements OnInit {\n\n  userInfo: any;\n  currency: Currency = new Currency;\n  cCode = 'PH';\n  curCode = 'PHP';\n  currencyValue = 0;\n\n  bazaar_products: any = {};\n  searchText;\n  bz_shop_name: string;\n  cart_count = 0;\n  uri = environment.backendUrl;\n\n  owner_flag = false;\n\n  constructor(private share: ShareService, private bzs: BazaarService, private socket: SocketService,\n    private ccp: CountryCurrencyPriceService, private http: HttpClient, private notify: NotificationsService,\n    private route: ActivatedRoute, private api: HttpService) { }\n\n  async ngOnInit() {\n    const param_id = parseInt(this.route.params['_value'].id, 10);\n    if (param_id === this.share.user.id) {\n      this.owner_flag = true;\n    }\n    // get cart count\n    this.getCartCount();\n    // get user country code\n    this.userInfo = await this.ccp.getUserInfo();\n    this.cCode = this.userInfo['countryCode'];\n    // get user country currency code\n    this.curCode = this.currency[`${this.cCode}`];\n    // get user country currency value\n    this.currencyValue = await this.ccp.getCurrencyValue(this.curCode);\n    // get bazaar products\n    this.bazaar_products = await this.bzs.getBazaarProducts(this.route.params['_value'].id);\n    // console.log(this.bazaar_products);\n    // get bazaar info\n    this.http.get(this.uri + '/getBazaarInfo/' + this.route.params['_value'].id).subscribe((response: object) => {\n      if (response['bz_name']) {\n        this.bz_shop_name = response['bz_name'];\n      } else {\n        this.bz_shop_name = 'Bazaar Shop';\n      }\n    });\n  }\n\n  async getCartCount(): Promise<any> {\n    const res = await this.http.get(`${this.uri}/getCartCount/${this.share.user.id}`).toPromise();\n    this.cart_count = res['total'];\n  }\n\n  addToCart(bz_pro_id) {\n    const param_id = parseInt(this.route.params['_value'].id, 10);\n    const share_user_id = parseInt(this.share.user.id, 10);\n    if (param_id === share_user_id) {\n      this.notify.error('INFO', 'This is your own product!', { timeOut: 5000 });\n    } else {\n      this.http.post(`${this.uri}/addToCart`, { bz_pro_id: bz_pro_id, userid: this.share.user.id }).subscribe(res => {\n        if (res['status'] === 'success') {\n          this.cart_count++;\n          this.notify.success('INFO', res['payload'], { timeOut: 5000 });\n        } else if (res['status'] === 'already') {\n          this.notify.error('INFO', res['payload'], { timeOut: 5000 });\n        }\n      });\n    }\n  }\n\n  product_delete(bz_pro_id: number) {\n    this.api.postToBackend('/deleteProduct', { bz_pro_id: bz_pro_id }, this.share.user.token).then(res => {\n      if (res['status'] === 'success') {\n        this.notify.success('INFO', res['payload'], { timeOut: 5000 });\n        this.ngOnInit();\n      } else if (res['status'] === 'error') {\n        this.notify.error('INFO', res['payload'], { timeOut: 5000 });\n      }\n    });\n  }\n}\n","module.exports = \"table tbody tr td {\\r\\n    text-align: center;\\r\\n    vertical-align: middle;\\r\\n}\\r\\n\\r\\ntable thead th {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    border: 1px solid #ddd;\\r\\n    border-radius: 3px;\\r\\n    padding: 3px;\\r\\n}\\r\\n\\r\\n.mb-20 {\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.dataTables_filter input {\\r\\n    width: 300px;\\r\\n    display: inline-block;\\r\\n}\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row  mb-20\\\">\\n        <div class=\\\"col-md-4 col-sm-4\\\">\\n            <button class=\\\"btn btn-block btn-success\\\" (click)=\\\"personal()\\\" [disabled]=\\\"flag\\\">\\n              <strong>Persanal Savings</strong>\\n            </button>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-4\\\">\\n            <button class=\\\"btn btn-block btn-danger\\\" (click)=\\\"agent()\\\" [disabled]=\\\"!flag\\\">\\n              <strong>Agent Savings</strong>\\n            </button>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-4\\\">\\n            <button class=\\\"btn btn-block btn-primary\\\" disabled>\\n                <strong>{{ flag ? 'Personal Savings' : 'Agent Savings' }} LC</strong>\\n              </button>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <a (click)=\\\"goToBazaarHome()\\\" style=\\\"cursor: pointer;\\\">\\n                    <strong>Bazaar / </strong>\\n                </a>\\n                <a class=\\\"active text-primary\\\">\\n                    <strong>{{ flag ? 'Personal' : 'Agent' }} & Savings</strong>\\n                </a>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12 col-sm-12\\\">\\n                        <table class=\\\"table table-striped table-bordered row-border\\\" *ngIf=\\\"flag\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTrigger\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>No</th>\\n                                    <th>Image</th>\\n                                    <th>Product Name</th>\\n                                    <th>Sold @ LC Price</th>\\n                                    <th>Initial LC Price</th>\\n                                    <th>Sold @ CC Price</th>\\n                                    <th>Initial CC Price</th>\\n                                    <th>Number Itme Sold</th>\\n                                    <th>Total LC Amount</th>\\n                                    <th>Personal Savings</th>\\n                                    <th>TPS</th>\\n                                    <th>Date & Time</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let bazaar of savings | keyvalue; let i = index\\\">\\n                                    <td>{{ i + 1 }}</td>\\n                                    <td>\\n                                        <img src=\\\"assets/{{ bazaar.value.Bzp_Info[0].bzp_photo }}\\\" style=\\\"max-width:100px; max-height:70px;\\\" alt=\\\"\\\" />\\n                                    </td>\\n                                    <td>{{ bazaar.value.Bzp_Info[0].bp_name }}</td>\\n                                    <td>{{ bazaar.value.buy_controlled_lc_price | number:'0.4-4' }}LC</td>\\n                                    <td>{{ bazaar.value.Bzp_Info[0].initial_lc_price | number:'0.4-4' }}LC</td>\\n                                    <td>{{ bazaar.value.buy_controlled_cc_price }}{{ curCode }}</td>\\n                                    <td>{{ bazaar.value.Bzp_Info[0].initial_cc_price }}{{ curCode }}</td>\\n                                    <td>{{ bazaar.value.quantity }}</td>\\n                                    <td>{{ bazaar.value.lcamount | number:'0.4-4' }}LC</td>\\n                                    <td>{{ bazaar.value.Bzp_Info[0].personal_savings }} %</td>\\n                                    <td>{{ bazaar.value.tps | number:'0.4-4' }}LC</td>\\n                                    <td>{{ bazaar.value.update_time | date : 'short' }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <table class=\\\"table table-striped table-bordered row-border\\\" *ngIf=\\\"!flag\\\" datatable [dtOptions]=\\\"dtOptions\\\" [dtTrigger]=\\\"dtTriggerAgent\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>No</th>\\n                                    <th>Image</th>\\n                                    <th>Product Name</th>\\n                                    <th>Sold @ LC Price</th>\\n                                    <th>Initial LC Price</th>\\n                                    <th>Sold @ CC Price</th>\\n                                    <th>Initial CC Price</th>\\n                                    <th>Number Itme Sold</th>\\n                                    <th>Total LC Amount</th>\\n                                    <th>Agent Savings</th>\\n                                    <th>TAS</th>\\n                                    <th>Date & Time</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let bazaar of agentSavings | keyvalue; let i = index\\\">\\n                                    <td>{{ i + 1 }}</td>\\n                                    <td>\\n                                        <img src=\\\"assets/{{ bazaar.value.Bzp_Info[0].bzp_photo }}\\\" style=\\\"max-width:100px; max-height:70px;\\\" alt=\\\"\\\" />\\n                                    </td>\\n                                    <td>{{ bazaar.value.Bzp_Info[0].bp_name }}</td>\\n                                    <td>{{ bazaar.value.buy_controlled_lc_price | number:'0.4-4' }}LC</td>\\n                                    <td>{{ bazaar.value.Bzp_Info[0].initial_lc_price | number:'0.4-4' }}LC</td>\\n                                    <td>{{ bazaar.value.buy_controlled_cc_price }}{{ curCode }}</td>\\n                                    <td>{{ bazaar.value.Bzp_Info[0].initial_cc_price }}{{ curCode }}</td>\\n                                    <td>{{ bazaar.value.quantity }}</td>\\n                                    <td>{{ bazaar.value.lcamount | number:'0.4-4' }}LC</td>\\n                                    <td>{{ bazaar.value.Bzp_Info[0].agent_savings }} %</td>\\n                                    <td>{{ bazaar.value.tas | number:'0.4-4' }}LC</td>\\n                                    <td>{{ bazaar.value.update_time | date : 'short' }}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ShareService } from 'src/app/services/share.service';\nimport { Router } from '@angular/router';\nimport { HttpService } from 'src/app/services/http.service';\nimport { CountryCurrencyPriceService } from 'src/app/services/country-currency-price.service';\nimport Currency from '../../../model/currency';\n\n@Component({\n  selector: 'app-personal-agent-savings',\n  templateUrl: './personal-agent-savings.component.html',\n  styleUrls: ['./personal-agent-savings.component.css']\n})\nexport class PersonalAgentSavingsComponent implements OnInit {\n\n  savings: any = {};\n  agentSavings: any = {};\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<any> = new Subject();\n  dtTriggerAgent: Subject<any> = new Subject();\n  flag = true;\n\n  userInfo: any;\n  currency: Currency = new Currency;\n  cCode = 'PH';\n  curCode = 'PHP';\n\n  constructor(private router: Router, private share: ShareService, private api: HttpService, private ccp: CountryCurrencyPriceService) { }\n\n  async ngOnInit() {\n    // get user country code\n    this.userInfo = await this.ccp.getUserInfo();\n    this.cCode = this.userInfo['countryCode'];\n    // get user country currency code\n    this.curCode = this.currency[`${this.cCode}`];\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      processing: true,\n      ordering: true\n    };\n    this.getData(this.flag);\n  }\n\n  getData(cond: boolean) {\n    if (cond) {\n      this.api.postToBackend('/getPersonalSavings', { userid: this.share.user.id }, this.share.user.token).then(res => {\n        this.savings = res;\n        this.dtTrigger.next();\n      });\n    } else {\n      this.agentSavings = {};\n      this.dtTriggerAgent.next();\n    }\n  }\n\n  // tslint:disable-next-line: use-life-cycle-interface\n  ngOnDestroy(): void {\n    // Do not forget to unsubscribe the event\n    this.dtTrigger.unsubscribe();\n    this.dtTriggerAgent.unsubscribe();\n  }\n\n  personal() {\n    this.flag = !this.flag;\n    this.getData(this.flag);\n  }\n\n  agent() {\n    this.flag = !this.flag;\n    this.getData(this.flag);\n  }\n\n  goToBazaarHome() {\n    this.router.navigate(['cryptobazaar']);\n  }\n\n}\n","module.exports = \".checkout_title {\\r\\n    text-transform: uppercase;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0.75rem;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    border: 1px solid #ddd;\\r\\n    border-radius: 3px;\\r\\n    padding: 3px;\\r\\n    min-height: 150px;\\r\\n    max-height: 150px;\\r\\n}\\r\\n\\r\\nh5 {\\r\\n    font-size: 1.0rem;\\r\\n}\\r\\n\\r\\n.mb-15 {\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.ml-10 {\\r\\n    margin-left: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3 col-md-3\\\">\\n        <div class=\\\"card text-white bg-primary text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <strong>LC Maintaining Balance : {{ socket.LcMaintainingBalance }} LC</strong>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-3 col-md-3\\\">\\n        <div class=\\\"card text-white bg-danger text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <strong>1 LC : {{ socket.lc_btc | number:'0.0-15' }} BTC</strong>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-3 col-md-3\\\">\\n        <div class=\\\"card text-white bg-success text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <strong>1 LC : {{ socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4' }} {{ curCode }}</strong>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-3 col-md-3\\\">\\n        <div class=\\\"card text-white bg-dark text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <strong>LC Balance : {{ socket.lc_balance }} LC</strong>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 col-sm-10\\\">\\n        <h4 class=\\\"checkout_title\\\">\\n            <strong>\\n                Pre Checkout Orders\\n          </strong>\\n        </h4>\\n    </div>\\n    <div class=\\\"col-md-2 col-sm-2\\\">\\n        <button class=\\\"btn btn-block btn-primary mb-15\\\">\\n          <em class=\\\"icon-basket\\\"></em>\\n          <strong> {{ cart_count }} product(s)</strong>\\n        </button>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 col-sm-12\\\">\\n        <div *ngIf='loading' class='loading'>\\n            <img class='img-fluid' src='assets/loading.gif' alt=\\\"\\\" />\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-12 col-sm-12\\\">\\n        <div class=\\\"alert alert-success text-center\\\" style=\\\"color:white\\\" *ngIf=\\\"showSuccess == true\\\">\\n            <strong>* {{ success.message }}</strong>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-12 col-md-12\\\" *ngIf=\\\"claim && cart_count > 0\\\">\\n        <div class=\\\"card bg-secondary text-center\\\">\\n            <div class=\\\"card-body\\\">\\n                <strong>Bazaar # : {{ bazaar_shop_id }} | Claim Code : {{ claim }}</strong>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-12 text-center\\\" *ngIf=\\\"!pre_check_out_info.length; else display_products\\\">\\n        <strong>* There is no products. Please add product to cart.</strong>\\n    </div>\\n    <ng-template #display_products>\\n        <div class=\\\"col-md-12 row\\\" *ngFor=\\\"let bzp of pre_check_out_info | keyvalue\\\">\\n            <div class=\\\"col-md-4\\\">\\n                <div class=\\\"card mb-4 text-white bg-dark\\\">\\n                    <img class=\\\"card-img-top\\\" src=\\\"assets/{{ bzp.value.Pro_Info[0].bzp_photo }}\\\" alt=\\\"bzp.value.Pro_Info[0].bp_name\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <h5 class=\\\"card-title\\\">Bazaar # : {{ bzp.value.Pro_Info[0].userid }}</h5>\\n                        <h5 class=\\\"card-title\\\">Product Name : {{ bzp.value.Pro_Info[0].bp_name }}</h5>\\n                        <h5 class=\\\"card-title\\\">Availability : {{ bzp.value.Pro_Info[0].availability }}</h5>\\n                        <h5 class=\\\"card-title\\\">Initial LC Price : {{ bzp.value.Pro_Info[0].initial_lc_price }} LC</h5>\\n                        <h5 class=\\\"card-title\\\">Controlled LC Price : {{ bzp.value.Pro_Info[0].initial_cc_price / (socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4') }} LC</h5>\\n                        <h5 class=\\\"card-title\\\">Initial CC Price : {{ bzp.value.Pro_Info[0].initial_cc_price }} {{ curCode }}</h5>\\n                        <h5 class=\\\"card-title\\\">Controlled CC Price : {{ bzp.value.Pro_Info[0].initial_cc_price / (socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4') * bzp.value.Pro_Info[0].lc_cc }} {{ curCode }}</h5>\\n                        <h5 class=\\\"card-title\\\">1 LC To CC @ Post Priced : {{ bzp.value.Pro_Info[0].lc_cc }} {{ curCode }}</h5>\\n                        <h5 class=\\\"card-title\\\">Personal Savings : {{ bzp.value.Pro_Info[0].personal_savings }} %</h5>\\n                        <h5 class=\\\"card-title\\\">Agent Savings : {{ bzp.value.Pro_Info[0].agent_savings }} %</h5>\\n                        <h5 class=\\\"card-title\\\">Present 1 LC to CC : {{ socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4' }} {{ curCode }}</h5>\\n                        <h5 class=\\\"card-title\\\">Present 1 LC to BTC : {{ socket.lc_btc | number:'0.0-15' }} BTC</h5>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <strong>Order Details</strong>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <form class=\\\"form-horizontal\\\">\\n                            <div class=\\\"alert alert-danger text-center\\\" *ngIf=\\\"total_payable_lc * bzp.value.Pro_Info[0].lc_cc > socket.lc_balance\\\">\\n                                Insufficient LC Balance\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-5 col-form-label\\\" for=\\\"buy_controlled_cc_price{{bzp.value.bz_pro_id}}\\\">Buy @ Controlled CC Price</label>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input class=\\\"form-control\\\" name=\\\"buy_controlled_cc_price{{bzp.value.bz_pro_id}}\\\" (keyup)=\\\"buy_controlled_cc_price_change($event, bzp.value.Pro_Info[0].lc_cc)\\\" required placeholder=\\\"Please type controll cc value...\\\" type=\\\"text\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"alert alert-danger text-center\\\" *ngIf=\\\"0 > buy_controlled_cc_price\\\">\\n                                Invalid value\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-5 col-form-label\\\" for=\\\"quantity{{bzp.value.bz_pro_id}}\\\">Quantity</label>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input class=\\\"form-control\\\" name=\\\"quantity{{bzp.value.bz_pro_id}}\\\" (keyup)=\\\"quantity_change($event)\\\" placeholder=\\\"Please type quantity...\\\" required type=\\\"text\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"alert alert-danger text-center\\\" *ngIf=\\\"quantity > bzp.value.Pro_Info[0].availability || 0 > quantity\\\">\\n                                Insufficient stocks or invalid value\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-5 col-form-label\\\" for=\\\"totoal_payable_cc_value{{bzp.value.bz_pro_id}}\\\">Total Payable CC Value</label>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input class=\\\"form-control\\\" #totoal_payable_cc_value{{bzp.value.bz_pro_id}} type=\\\"number\\\" readonly [value]=\\\"total_payable_cc\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-5 col-form-label\\\" for=\\\"total_payable_lc{{bzp.value.bz_pro_id}}\\\">Total Payable LC</label>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input class=\\\"form-control\\\" #total_payable_lc{{bzp.value.bz_pro_id}} type=\\\"number\\\" readonly [value]=\\\"total_payable_lc\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-5 col-form-label\\\" for=\\\"buy_controlled_lc_price{{bzp.value.bz_pro_id}}\\\">Buy @ Controlled LC Price</label>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input class=\\\"form-control\\\" #buy_controlled_lc_price{{bzp.value.bz_pro_id}} readonly type=\\\"number\\\" [value]=\\\"buy_controlled_lc_price\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-5 col-form-label\\\" for=\\\"tps\\\">TPS</label>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input class=\\\"form-control\\\" #tps readonly type=\\\"number\\\" [value]=\\\"total_payable_lc * bzp.value.Pro_Info[0].personal_savings / 100\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group row\\\">\\n                                <label class=\\\"col-sm-5 col-form-label\\\" for=\\\"tas\\\">TAS</label>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <input class=\\\"form-control\\\" #tas readonly type=\\\"number\\\" [value]=\\\"total_payable_lc * bzp.value.Pro_Info[0].agent_savings / 100\\\">\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <button class=\\\"btn btn-danger\\\" type=\\\"submit\\\" (click)=\\\"submitPay(bzp.value.Pro_Info[0].userid, bzp.value.bz_pro_id, tps.value, tas.value, bzp.value.cart_id)\\\" [disabled]=\\\"total_payable_lc * bzp.value.Pro_Info[0].lc_cc > socket.lc_balance || quantity > bzp.value.Pro_Info[0].availability  || !buy_controlled_cc_price || 0 >= buy_controlled_cc_price || !quantity || 0 >= quantity\\\">Pay Item</button>\\n                        <button class=\\\"btn btn-dark ml-10\\\" type=\\\"button\\\" (click)=\\\"cancelProduct(bzp.value.cart_id)\\\">Cancel</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from 'src/app/services/socket.service';\nimport { CountryCurrencyPriceService } from 'src/app/services/country-currency-price.service';\nimport { environment } from '../../../../environments/environment';\nimport Currency from '../../../model/currency';\nimport { ShareService } from 'src/app/services/share.service';\nimport { HttpClient } from '@angular/common/http';\nimport { BazaarService } from 'src/app/bazaar.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { HttpService } from 'src/app/services/http.service';\nimport { NotificationsService } from 'angular2-notifications';\n\n@Component({\n  selector: 'app-pre-checkout-orders',\n  templateUrl: './pre-checkout-orders.component.html',\n  styleUrls: ['./pre-checkout-orders.component.css']\n})\nexport class PreCheckoutOrdersComponent implements OnInit {\n\n  userInfo: any;\n  currency: Currency = new Currency;\n  cCode = 'PH';\n  curCode = 'PHP';\n  currencyValue = 0;\n\n  uri = environment.backendUrl;\n  pre_check_out_info: any = {};\n  cart_count = 0;\n\n  buy_controlled_cc_price: number;\n  buy_controlled_lc_price: number;\n  quantity: number;\n  total_payable_cc = 0;\n  total_payable_lc = 0;\n\n  payItem: FormGroup;\n\n  loading = false;\n  showSuccess = false;\n  success = { message: '' };\n  claim: any;\n  bazaar_shop_id = 0;\n\n  constructor(private socket: SocketService, private ccp: CountryCurrencyPriceService, private api: HttpService,\n    private share: ShareService, private http: HttpClient, private bzs: BazaarService, private fb: FormBuilder,\n    private notify: NotificationsService) {\n      this.payItem = this.fb.group({});\n    }\n\n  async ngOnInit() {\n    this.buy_controlled_cc_price = 0;\n    this.quantity = 0;\n    // get cart count\n    this.getCartCount();\n    // get user country code\n    this.userInfo = await this.ccp.getUserInfo();\n    this.cCode = this.userInfo['countryCode'];\n    // get user country currency code\n    this.curCode = this.currency[`${this.cCode}`];\n    // get user country currency value\n    this.currencyValue = await this.ccp.getCurrencyValue(this.curCode);\n    // get pre checkout order product information\n    this.pre_check_out_info = await this.bzs.getPreCheckoutInfo(this.share.user.id);\n    // console.log(this.pre_check_out_info);\n    if (this.pre_check_out_info.length) {\n      this.api.postToBackend('/claim', { shop_id: this.pre_check_out_info[0].Pro_Info[0].userid, userid: this.share.user.id }\n      , this.share.user.token).then(res => {\n          // console.log(Object.keys(res).length);\n          if (Object.keys(res).length === 0) {\n            this.claim = false;\n          } else {\n            // console.log(res);\n            this.claim = res[0]['claim'];\n            this.bazaar_shop_id = res[0]['shop_id'];\n          }\n      });\n    }\n  }\n\n  async getCartCount(): Promise<any> {\n    const res = await this.http.get(`${this.uri}/getCartCount/${this.share.user.id}`).toPromise();\n    this.cart_count = res['total'];\n  }\n\n  buy_controlled_cc_price_change(event: any, lc_to_cc_post_priced: number) {\n    this.buy_controlled_cc_price = parseFloat(event.target.value);\n    // Buy @ Controlled LC Price = Buy @ Controlled CC Price / 1 LC To CC @ Post Priced\n    this.buy_controlled_lc_price = this.buy_controlled_cc_price / lc_to_cc_post_priced;\n    // Total Payable CC Value = Quantity * Buy @ Controlled CC Price\n    this.total_payable_cc = this.buy_controlled_cc_price * this.quantity;\n    // Total Payable LC = Quantity * Buy @ Controlled LC Price\n    this.total_payable_lc = this.quantity * this.buy_controlled_lc_price;\n  }\n\n  quantity_change(event: any) {\n    this.quantity = parseInt(event.target.value, 10);\n    this.total_payable_cc = parseFloat((this.buy_controlled_cc_price * this.quantity).toFixed(7));\n    this.total_payable_lc = this.quantity * this.buy_controlled_lc_price;\n  }\n\n  submitPay(shop_id: number, bz_pro_id: number, tps: number, tas: number, cart_id: number) {\n    if (this.bazaar_shop_id !== 0) {\n      if (this.bazaar_shop_id !== shop_id && this.claim) {\n        this.notify.error('INFO', 'Shop to bazaar id number ' + this.bazaar_shop_id, { timeOut: 5000 });\n        this.ngOnInit();\n        return;\n      }\n    }\n    this.payItem.value.shop_id = shop_id;\n    this.payItem.value.bz_pro_id = bz_pro_id;\n    this.payItem.value.quantity = this.quantity;\n    this.payItem.value.buy_controlled_cc_price = this.buy_controlled_cc_price;\n    this.payItem.value.total_payable_cc_price = this.total_payable_cc;\n    this.payItem.value.total_payable_lc = this.total_payable_lc;\n    this.payItem.value.buy_controlled_lc_price = this.buy_controlled_lc_price;\n    this.payItem.value.tps = tps;\n    this.payItem.value.tas = tas;\n    this.payItem.value.rate = this.socket.lc_btc;\n    this.payItem.value.type = 'bzppay';\n    this.payItem.value.claim = this.claim;\n    this.payItem.value.cart_count = this.cart_count;\n    this.payItem.value.cart_id = cart_id;\n    // console.log(this.payItem.value);\n\n    this.showSuccess = false;\n    this.loading = true;\n\n    this.api.postToBackend('/recordOrder', this.payItem.value, this.share.user.token).then(res => {\n      this.loading = false;\n      if (res['status'] === 'success') {\n        this.notify.success('INFO', 'Pay Processing Success!', { timeOut: 5000 });\n        this.success.message = 'Payment Success!';\n        this.showSuccess = true;\n        this.ngOnInit();\n      }\n    }).catch(err => {\n      this.notify.error('ERROR', JSON.parse(err._body).payload);\n    });\n  }\n\n  cancelProduct(cid: number) {\n    this.loading = true;\n    this.api.postToBackend('/removeProductFromCart', { cart_id: cid }, this.share.user.token).then(res => {\n      this.loading = false;\n      if (res) {\n        this.notify.success('INFO', 'Product Removed from your cart.', { timeOut: 5000 });\n        this.ngOnInit();\n      }\n    }).catch(err => {\n      this.notify.error('ERROR', JSON.parse(err._body).payload);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container-fluid py-5\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client-layout',\n  templateUrl: './client-layout.component.html',\n  styleUrls: ['./client-layout.component.css']\n})\nexport class ClientLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Routes, RouterModule, CanActivate, Router } from '@angular/router';\r\nimport { ClientLayoutComponent } from './client-layout/client-layout.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { WithdrawalComponent } from './withdrawal/withdrawal.component';\r\nimport { Convert1Component } from './convert1/convert1.component';\r\nimport { Convert2Component } from './convert2/convert2.component';\r\nimport { OpenorderComponent } from './openorder/openorder.component';\r\nimport { SuccessfulorderComponent } from './successfulorder/successfulorder.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { FaqComponent } from './faq/faq.component';\r\nimport { StorageService } from '../services/storage.service';\r\nimport { TxhistoryComponent } from './txhistory/txhistory.component';\r\nimport { RewardComponent } from './reward/reward.component';\r\nimport { HowItWorksComponent } from './how-it-works/how-it-works.component';\r\nimport { ContactUsComponent } from './contact-us/contact-us.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { CryptoBazaarComponent } from './crypto-bazaar/crypto-bazaar.component';\r\nimport { BazaarProductComponent } from './bazaar/bazaar-product/bazaar-product.component';\r\nimport { PreCheckoutOrdersComponent } from './bazaar/pre-checkout-orders/pre-checkout-orders.component';\r\nimport { BazaarProductEditComponent } from './bazaar/bazaar-product-edit/bazaar-product-edit.component';\r\nimport { PersonalAgentSavingsComponent } from './bazaar/personal-agent-savings/personal-agent-savings.component';\r\n\r\n@Injectable()\r\nexport class Guard implements CanActivate {\r\n\tconstructor(private storage: StorageService, private router: Router) { }\r\n\tcanActivate() {\r\n\t\tif (!this.storage.getUser() /* check user logged or not */) {\r\n\t\t\tthis.router.navigate(['/login']);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nconst routes: Routes = [\r\n\t{\r\n\t\tpath: '',\r\n\t\tcomponent: ClientLayoutComponent,\r\n\t\tchildren: [\r\n\t\t\t{\r\n\t\t\t\tpath: '',\r\n\t\t\t\tredirectTo: 'home',\r\n\t\t\t\tpathMatch: 'full'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'login',\r\n\t\t\t\tcomponent: LoginComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'home',\r\n\t\t\t\tcomponent: HomeComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'register',\r\n\t\t\t\tcomponent: RegisterComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'register/:id',\r\n\t\t\t\tcomponent: RegisterComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'dashboard',\r\n\t\t\t\tcanActivate: [Guard],\r\n\t\t\t\tcomponent: DashboardComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'withdrawal',\r\n\t\t\t\tcanActivate: [Guard],\r\n\t\t\t\tcomponent: WithdrawalComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'convert-btc-to-lc',\r\n\t\t\t\tcanActivate: [Guard],\r\n\t\t\t\tcomponent: Convert1Component\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'convert-lc-to-btc',\r\n\t\t\t\tcanActivate: [Guard],\r\n\t\t\t\tcomponent: Convert2Component\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'open-order',\r\n\t\t\t\tcanActivate: [Guard],\r\n\t\t\t\tcomponent: OpenorderComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'successful-order',\r\n\t\t\t\tcanActivate: [Guard],\r\n\t\t\t\tcomponent: SuccessfulorderComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'txhistory',\r\n\t\t\t\tcanActivate: [Guard],\r\n\t\t\t\tcomponent: TxhistoryComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'about',\r\n\t\t\t\tcomponent: AboutComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'faq',\r\n\t\t\t\tcomponent: FaqComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'how',\r\n\t\t\t\tcomponent: HowItWorksComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'contact',\r\n\t\t\t\tcomponent: ContactUsComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'forgot',\r\n\t\t\t\tcomponent: ForgotPasswordComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'cryptobazaar',\r\n\t\t\t\tcomponent: CryptoBazaarComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'cryptobazaar/shop/:id',\r\n\t\t\t\tcomponent: BazaarProductComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'cryptobazaar/shop/:id/product/edit/:id',\r\n\t\t\t\tcomponent: BazaarProductEditComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'cryptobazaar/shop/:id/precheckout',\r\n\t\t\t\tcomponent: PreCheckoutOrdersComponent\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpath: 'cryptobazaar/pandasavings',\r\n\t\t\t\tcomponent: PersonalAgentSavingsComponent\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forChild(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class ClientRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10 offset-1\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body col-md-10 offset-1\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col text-center\\\">\\n                            <h3>Contact Us</h3>\\n                        </div>\\n                    </div>\\n                    <form [formGroup]=\\\"angForm\\\" novalidate class=\\\"form-horizontal\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"email\\\">Eamil</label>\\n                            <input class=\\\"form-control\\\" id=\\\"email\\\" type=\\\"email\\\" formControlName=\\\"email\\\" #email placeholder=\\\"Please type your email address\\\">\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n                                * Email is required!\\n                            </div>\\n                            <div *ngIf=\\\"angForm.controls['email'].errors.email\\\">\\n                                * Email is not valid!\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"title\\\">Title</label>\\n                            <input class=\\\"form-control\\\" id=\\\"title\\\" type=\\\"text\\\" formControlName=\\\"title\\\" #title placeholder=\\\"Please type title\\\">\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['title'].invalid && (angForm.controls['title'].dirty || angForm.controls['title'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"angForm.controls['title'].errors.required\\\">\\n                                * Title is required!\\n                            </div>\\n                            <div *ngIf=\\\"angForm.controls['title'].errors.minlength\\\">\\n                                * Please more type!\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"message\\\">Message</label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"message\\\" type=\\\"text\\\" rows=\\\"7\\\" formControlName=\\\"message\\\" #message placeholder=\\\"Please type message\\\"></textarea>\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['message'].invalid && (angForm.controls['message'].dirty || angForm.controls['message'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"angForm.controls['message'].errors.required\\\">\\n                                * Message is required!\\n                            </div>\\n                            <div *ngIf=\\\"angForm.controls['message'].errors.minlength\\\">\\n                                * Please more type!\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <button class=\\\"btn btn-success\\\" (click)=\\\"contact(email.value, title.value, message.value)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\">\\n                                  Send\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ContactService } from 'src/app/services/contact.service';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.css']\n})\nexport class ContactUsComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private cs: ContactService) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      title: ['', [Validators.required, Validators.minLength(7)]],\n      message: ['', [Validators.required, Validators.minLength(30)]]\n    });\n  }\n\n  contact(email, title, message) {\n    this.cs.sendMessage(email, title, message);\n    this.angForm.reset();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<app-subheader action=\\\"convert-btc-to-lc\\\"></app-subheader>\\n\\t\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t<app-convert1form \\n\\t\\t\\t\\t[btc_balance]=\\\"socket.btc_balance\\\" \\n\\t\\t\\t\\t[lc_balance]=\\\"socket.lc_balance\\\" \\n\\t\\t\\t\\t[lc_btc]=\\\"socket.lc_btc\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t</app-convert1form>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t<app-last-convert type=\\\"ltob\\\" [status]=\\\"socket.status_ltob\\\"></app-last-convert>\\n\\t\\t\\t<app-last-convert type=\\\"btol\\\" [status]=\\\"socket.status_btol\\\"></app-last-convert>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../../services/socket.service';\n\n\n@Component({\n  selector: 'app-convert1',\n  templateUrl: './convert1.component.html',\n  styleUrls: ['./convert1.component.css']\n})\nexport class Convert1Component implements OnInit {\n\n  constructor(private socket: SocketService) { }\n  \n  ngOnInit() {\n  \t\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<app-subheader action=\\\"convert-lc-to-btc\\\"></app-subheader>\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t<app-convert2form \\n\\t\\t\\t\\t[btc_balance]=\\\"socket.btc_balance\\\"\\n\\t\\t\\t\\t[lc_balance]=\\\"socket.lc_balance\\\"\\n\\t\\t\\t\\t[lc_btc]=\\\"socket.lc_btc\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t</app-convert2form>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t\\t<app-last-convert type=\\\"ltob\\\" [status]=\\\"socket.status_ltob\\\"></app-last-convert>\\n\\t\\t\\t<app-last-convert type=\\\"btol\\\" [status]=\\\"socket.status_btol\\\"></app-last-convert>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../../services/socket.service';\n\n@Component({\n  selector: 'app-convert2',\n  templateUrl: './convert2.component.html',\n  styleUrls: ['./convert2.component.css']\n})\nexport class Convert2Component implements OnInit {\n\n  constructor(private socket: SocketService) { }\n  \n  ngOnInit() {\n  \t\n  }\n\n}\n","module.exports = \"p {\\r\\n    font-size: 1.2rem;\\r\\n}\\r\\n\\r\\n.alert {\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.card-body {\\r\\n    padding: 0.75rem;\\r\\n}\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"btc_conversion_submitted < socket.BtcConversionTarget\\\">\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n            <h3>Bazaar Creation</h3>\\n            <hr>\\n        </div>\\n        <div class=\\\"col-sm-6 col-md-6\\\">\\n            <div class=\\\"card text-white bg-success text-center\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h4>BTC Conversion Target : {{ socket.BtcConversionTarget }} BTC</h4>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-6 col-md-6\\\">\\n            <div class=\\\"card text-white bg-info text-center\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h4>BTC Conversion Submitted : {{ btc_conversion_submitted }} BTC</h4>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n            <div class=\\\"card border-danger\\\">\\n                <div class=\\\"card-body\\\">\\n                    <p>\\n                        <strong>Note :</strong> Bazaar application form will be enable once you reach the BTC Conversion Target. Enjoy the selling and buying experience of commodities, services or any leagal means accepted by the law inside Crypto Bazaar.\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"btc_conversion_submitted >= socket.BtcConversionTarget && !bazaar_flag\\\">\\n        <div class=\\\"col-sm-6 col-md-6\\\">\\n            <div class=\\\"card text-white bg-success text-center\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h4>BTC Conversion Target : {{ socket.BtcConversionTarget }} BTC</h4>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-6 col-md-6\\\">\\n            <div class=\\\"card text-white bg-info text-center\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h4>BTC Conversion Submitted : {{ btc_conversion_submitted }} BTC</h4>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <strong>Bazaar Creation</strong></div>\\n                <div class=\\\"card-body\\\">\\n                    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"angForm\\\" novalidate (ngSubmit)=\\\"submitFunc()\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-3 col-form-label\\\" for=\\\"bz_photo\\\">Add Photo</label>\\n                            <div class=\\\"col-md-9\\\">\\n                                <input #bz_photo type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"bz_photo\\\" formControlName=\\\"bz_photo\\\" accept=\\\"image/*\\\" name=\\\"bz_photo\\\" hidden (change)=\\\"preview(bz_photo.files);bz_uploader.uploadAll()\\\" ng2FileSelect [uploader]=\\\"bz_uploader\\\" />\\n                                <img [src]=\\\"imgURL || 'http://placehold.it/350X150'\\\" height=\\\"150px;\\\" width=\\\"350px;\\\" alt=\\\"Bazaar Image\\\" />\\n                                <label for=\\\"bz_photo\\\" style=\\\"margin-left: 30px;\\\"><strong>Select Bazaar Photo By Clicking Here</strong></label>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['bz_photo'].invalid && (angForm.controls['bz_photo'].dirty || angForm.controls['bz_photo'].touched)\\\" class=\\\"alert text-center\\\">\\n                            <div *ngIf=\\\"angForm.controls['bz_photo'].errors.required\\\">\\n                                * Please Select Photo!\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-3 col-form-label\\\" for=\\\"bz_name\\\">Bazaar Name</label>\\n                            <div class=\\\"col-md-9\\\">\\n                                <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"bz_name\\\" #bz_name placeholder=\\\"Enter Bazaar Name..\\\">\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['bz_name'].invalid && (angForm.controls['bz_name'].dirty || angForm.controls['bz_name'].touched)\\\" class=\\\"alert text-center\\\">\\n                            <div *ngIf=\\\"angForm.controls['bz_name'].errors.required\\\">\\n                                * Bazaar Name is required!\\n                            </div>\\n                            <div *ngIf=\\\"angForm.controls['bz_name'].errors.minlength\\\">\\n                                * Please more type!\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-3 col-form-label\\\" for=\\\"city\\\">City Information</label>\\n                            <div class=\\\"col-md-9\\\">\\n                                <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"city\\\" #city placeholder=\\\"Enter City..\\\">\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['city'].invalid && (angForm.controls['city'].dirty || angForm.controls['city'].touched)\\\" class=\\\"alert text-center\\\">\\n                            <div *ngIf=\\\"angForm.controls['city'].errors.required\\\">\\n                                * City Information is required!\\n                            </div>\\n                            <div *ngIf=\\\"angForm.controls['city'].errors.minlength\\\">\\n                                * Please more type!\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-3 col-form-label\\\" for=\\\"address\\\">Address Information</label>\\n                            <div class=\\\"col-md-9\\\">\\n                                <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"address\\\" #address placeholder=\\\"Enter Address..\\\">\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['address'].invalid && (angForm.controls['address'].dirty || angForm.controls['address'].touched)\\\" class=\\\"alert text-center\\\">\\n                            <div *ngIf=\\\"angForm.controls['address'].errors.required\\\">\\n                                * Address is required!\\n                            </div>\\n                            <div *ngIf=\\\"angForm.controls['address'].errors.minlength\\\">\\n                                * Please more type!\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-md-3 col-form-label\\\" for=\\\"shop_rule\\\">Shop Rule</label>\\n                            <div class=\\\"col-md-9\\\">\\n                                <textarea class=\\\"form-control\\\" rows=\\\"7\\\" formControlName=\\\"shop_rule\\\" #shop_rule placeholder=\\\"Enter Shop Rule..\\\"></textarea>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['shop_rule'].invalid && (angForm.controls['shop_rule'].dirty || angForm.controls['shop_rule'].touched)\\\" class=\\\"alert text-center\\\">\\n                            <div *ngIf=\\\"angForm.controls['shop_rule'].errors.required\\\">\\n                                * Shop Rule is required!\\n                            </div>\\n                            <div *ngIf=\\\"angForm.controls['shop_rule'].errors.minlength\\\">\\n                                * Please more type!\\n                            </div>\\n                        </div>\\n                        <div *ngIf='loading' class='loading'>\\n                            <img class='img-fluid' src='assets/loading.gif' alt=\\\"\\\" />\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <button class=\\\"btn btn-primary mt-10\\\" type=\\\"submit\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\">\\n                                    Create Bazaar Now\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"btc_conversion_submitted >= socket.BtcConversionTarget && bazaar_flag\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <strong>Bazaar</strong>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-2\\\">\\n                            <div class=\\\"list-group\\\" id=\\\"list-tab\\\" role=\\\"tablist\\\">\\n                                <a class=\\\"list-group-item list-group-item-action\\\" id=\\\"list-bazaar-home\\\" data-toggle=\\\"tab\\\" href=\\\"#bazaar-home\\\" role=\\\"tab\\\" aria-controls=\\\"bazaar-home\\\" aria-selected=\\\"false\\\">Bazaar Home</a>\\n                                <a class=\\\"list-group-item list-group-item-action active\\\" id=\\\"list-bazaar-product-post\\\" data-toggle=\\\"tab\\\" href=\\\"#bazaar-product-post\\\" role=\\\"tab\\\" aria-controls=\\\"bazaar-product-post\\\" aria-selected=\\\"true\\\">Bazaar Product Posting</a>\\n                                <a class=\\\"list-group-item list-group-item-action\\\" id=\\\"list-pre-checkout-order\\\" data-toggle=\\\"tab\\\" href=\\\"#pre-checkout-order\\\" role=\\\"tab\\\" aria-controls=\\\"pre-checkout-order\\\">Pre Checkout Orders</a>\\n                                <a class=\\\"list-group-item list-group-item-action\\\" id=\\\"list-open-orders\\\" data-toggle=\\\"tab\\\" href=\\\"#open-orders\\\" role=\\\"tab\\\" aria-controls=\\\"open-orders\\\">Open Orders</a>\\n                                <a class=\\\"list-group-item list-group-item-action\\\" id=\\\"list-unclaimed-orders\\\" data-toggle=\\\"tab\\\" href=\\\"#unclaimed-orders\\\" role=\\\"tab\\\" aria-controls=\\\"unclaimed-orders\\\">Unclaimed Orders</a>\\n                                <a class=\\\"list-group-item list-group-item-action\\\" id=\\\"list-claimed-orders\\\" data-toggle=\\\"tab\\\" href=\\\"#claimed-orders\\\" role=\\\"tab\\\" aria-controls=\\\"claimed-orders\\\">Claimed Orders</a>\\n                                <a class=\\\"list-group-item list-group-item-action\\\" id=\\\"list-sales-inventory\\\" data-toggle=\\\"tab\\\" href=\\\"#sales-inventory\\\" role=\\\"tab\\\" aria-controls=\\\"sales-inventory\\\">Sales Inventory</a>\\n                                <a class=\\\"list-group-item list-group-item-action\\\" id=\\\"list-indirect-savings\\\" data-toggle=\\\"tab\\\" href=\\\"#indirect-savings\\\" role=\\\"tab\\\" aria-controls=\\\"indirect-savings\\\">Indirect Savings</a>\\n                                <a class=\\\"list-group-item list-group-item-action\\\" [routerLink]=\\\"['pandasavings']\\\">Personal & Agent Savings</a>\\n                                <a class=\\\"list-group-item list-group-item-action\\\" id=\\\"list-promo-items\\\" data-toggle=\\\"tab\\\" href=\\\"#promo-items\\\" role=\\\"tab\\\" aria-controls=\\\"promo-items\\\">Promo Items</a>\\n                                <a class=\\\"list-group-item list-group-item-action\\\" id=\\\"list-top-rewards\\\" data-toggle=\\\"tab\\\" href=\\\"#top-rewards\\\" role=\\\"tab\\\" aria-controls=\\\"top-rewards\\\">Top 10 Rewards</a>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-10\\\">\\n                            <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\n                                <div class=\\\"tab-pane fade\\\" id=\\\"bazaar-home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-bazaar-home\\\">\\n                                    <app-bazaar-home></app-bazaar-home>\\n                                </div>\\n                                <div class=\\\"tab-pane fade active show\\\" id=\\\"bazaar-product-post\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-bazaar-product-post\\\">\\n                                    <div class=\\\"card\\\">\\n                                        <div class=\\\"card-header\\\">\\n                                            <strong>Bazaar Product Posting</strong></div>\\n                                        <div class=\\\"card-body\\\">\\n                                            <form class=\\\"form-horizontal\\\" [formGroup]=\\\"bzp_angForm\\\" (ngSubmit)=\\\"submitProd(total_indirect_savings.value)\\\">\\n                                                <div class=\\\"col-md-12\\\">\\n                                                    <div class=\\\"card border-info text-center\\\">\\n                                                        <div class=\\\"card-body\\\">\\n                                                            <h5>Note: Profit of sellers will depend on PHPC market exchange and conversion timing.</h5>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"row\\\">\\n                                                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                                                        <div class=\\\"card text-white bg-danger text-center\\\">\\n                                                            <div class=\\\"card-body\\\">\\n                                                                <strong>1 LC : {{ socket.lc_btc | number:'0.0-15' }} BTC</strong>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                                                        <div class=\\\"card text-white bg-success text-center\\\">\\n                                                            <div class=\\\"card-body\\\">\\n                                                                <strong>1 LC : {{ socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4' }} {{ curCode }}</strong>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                                                        <div class=\\\"card text-white bg-dark text-center\\\">\\n                                                            <div class=\\\"card-body\\\">\\n                                                                <strong>1 BTC : {{ socket.btc_usd | number:'0.4-4' }} USD</strong>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                                                        <div class=\\\"card text-white bg-primary text-center\\\">\\n                                                            <div class=\\\"card-body\\\">\\n                                                                <strong>LC Balance : {{ lc_balance }} LC</strong>\\n                                                            </div>\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"bzp_photo\\\">Add Photo</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input #bzp_photo type=\\\"file\\\" class=\\\"form-control\\\" id=\\\"bzp_photo\\\" formControlName=\\\"bzp_photo\\\" accept=\\\"image/*\\\" name=\\\"bzp_photo\\\" hidden (change)=\\\"preview(bzp_photo.files);bzp_uploader.uploadAll();\\\" ng2FileSelect [uploader]=\\\"bzp_uploader\\\" />\\n                                                        <img [src]=\\\"imgURL || 'http://placehold.it/350X150'\\\" height=\\\"150px;\\\" width=\\\"350px;\\\" alt=\\\"Bazaar Product Image\\\" />\\n                                                        <label for=\\\"bzp_photo\\\" style=\\\"margin-left: 30px;\\\"><strong>Select Photo By Clicking Here</strong></label>\\n                                                    </div>\\n                                                </div>\\n                                                <div *ngIf=\\\"bzp_angForm.controls['bzp_photo'].invalid && (bzp_angForm.controls['bzp_photo'].dirty || bzp_angForm.controls['bzp_photo'].touched)\\\" class=\\\"alert text-center\\\">\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['bzp_photo'].errors.required\\\">\\n                                                        * Bazaar Product Photo is required!\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"bp_name\\\">Product Name</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"bp_name\\\" #bp_name placeholder=\\\"Enter Product Name..\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div *ngIf=\\\"bzp_angForm.controls['bp_name'].invalid && (bzp_angForm.controls['bp_name'].dirty || bzp_angForm.controls['bp_name'].touched)\\\" class=\\\"alert text-center\\\">\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['bp_name'].errors.required\\\">\\n                                                        * Product Name is required!\\n                                                    </div>\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['bp_name'].errors.minlength\\\">\\n                                                        * Please more type!\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"availability\\\">Availability</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"availability\\\" #availability placeholder=\\\"Enter number of product stock 5 or above..\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div *ngIf=\\\"bzp_angForm.controls['availability'].invalid && (bzp_angForm.controls['availability'].dirty || bzp_angForm.controls['availability'].touched)\\\" class=\\\"alert text-center\\\">\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['availability'].errors.required\\\">\\n                                                        * Availability is required!\\n                                                    </div>\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['availability'].errors.min || bzp_angForm.controls['availability'].invalid\\\">\\n                                                        * Invalid Number. Availability value have to be over 5\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"initial_cc_price\\\">Initial CC Price {{ curCode }}</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"initial_cc_price\\\" #initial_cc_price (keyup)=\\\"cc_lc_Change(initial_cc_price.value)\\\" placeholder=\\\"Enter Product price base on your country currency price..\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div *ngIf=\\\"bzp_angForm.controls['initial_cc_price'].invalid && (bzp_angForm.controls['initial_cc_price'].dirty || bzp_angForm.controls['initial_cc_price'].touched)\\\" class=\\\"alert text-center\\\">\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['initial_cc_price'].errors.required\\\">\\n                                                        * Initial CC Price is required!\\n                                                    </div>\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['initial_cc_price'].errors.min || bzp_angForm.controls['initial_cc_price'].invalid\\\">\\n                                                        * Invalid Value. Initial CC Price must be over 0.\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"control_cc_price\\\">Controlled CC Price ({{ curCode }})</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #control_cc_price value=\\\"{{ auto_control_cc_price }}\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"initial_lc_price\\\">Initial LC Price (LC)</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #initial_lc_price value=\\\"{{ auto_initial_lc_price / (socket.btc_usd * socket.lc_btc * currencyValue) }}\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"control_lc_price\\\">Controlled LC Price (LC)</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #control_lc_price value=\\\"{{ auto_control_lc_price / (socket.btc_usd * socket.lc_btc * currencyValue) }}\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"lc_cc\\\">1 LC To Country Currency</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #lc_cc value=\\\"{{ socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4' }}\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"lc_btc\\\">1 LC To BTC</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" readonly value=\\\"{{ socket.lc_btc | number:'0.0-15' }}\\\" #lc_btc>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"assigned_savings\\\">Assigned Savings</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"assigned_savings\\\" #assigned_savings value=\\\"{{ auto_assigned_savings}}\\\" (keyup)=\\\"saving_Change(assigned_savings.value, 0)\\\" placeholder=\\\"Enter number 18 - 36..\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div *ngIf=\\\"bzp_angForm.controls['assigned_savings'].invalid && (bzp_angForm.controls['assigned_savings'].dirty)\\\" class=\\\"alert text-center\\\">\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['assigned_savings'].errors.required\\\">\\n                                                        * Assigned Savings is required!\\n                                                    </div>\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['assigned_savings'].errors.min || bzp_angForm.controls['assigned_savings'].errors.max || bzp_angForm.controls['assigned_savings'].invalid\\\">\\n                                                        * Invalid Value. A ssigned Savings is 18 - 36 </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"agent_savings\\\">Agent Savings</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"agent_savings\\\" #agent_savings value=\\\"{{ auto_agent_savings }}\\\" (keyup)=\\\"saving_Change(agent_savings.value, 1)\\\" placeholder=\\\"Enter number 1 - 5..\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div *ngIf=\\\"bzp_angForm.controls['agent_savings'].invalid && (bzp_angForm.controls['agent_savings'].dirty)\\\" class=\\\"alert text-center\\\">\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['agent_savings'].errors.required\\\">\\n                                                        * Agent Savings is required!\\n                                                    </div>\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['agent_savings'].errors.min || bzp_angForm.controls['agent_savings'].errors.max || bzp_angForm.controls['agent_savings'].invalid\\\">\\n                                                        * Invalid Value. A gent Savings is 1 -5 </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"personal_savings\\\">Personal Savings</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" readonly value=\\\"{{ auto_personal_savings }}\\\" #personal_savings>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"indirect_savings\\\">Indirect Savings</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" readonly value=\\\"{{ auto_indirect_savings }}\\\" #indirect_savings>\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"total_product_costs\\\">Total Product Costs</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #total_product_costs value=\\\"{{ availability.value * initial_cc_price.value }}\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"total_indirect_savings\\\">Total Indirect Savings</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" readonly #total_indirect_savings value=\\\"{{ availability.value * initial_cc_price.value * auto_assigned_savings / 100 / (socket.btc_usd * socket.lc_btc * currencyValue) }}\\\">\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"form-group row\\\">\\n                                                    <label class=\\\"col-md-3 col-form-label\\\" for=\\\"product_description\\\">Product Description</label>\\n                                                    <div class=\\\"col-md-9\\\">\\n                                                        <textarea class=\\\"form-control\\\" rows=\\\"7\\\" formControlName=\\\"product_description\\\" #product_description placeholder=\\\"Enter Product Description..\\\"></textarea>\\n                                                    </div>\\n                                                </div>\\n                                                <div *ngIf=\\\"bzp_angForm.controls['product_description'].invalid && (bzp_angForm.controls['product_description'].dirty || bzp_angForm.controls['product_description'].touched)\\\" class=\\\"alert text-center\\\">\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['product_description'].errors.required\\\">\\n                                                        * Product Description is required!\\n                                                    </div>\\n                                                    <div *ngIf=\\\"bzp_angForm.controls['product_description'].errors.minlength\\\">\\n                                                        * Please more type!\\n                                                    </div>\\n                                                </div>\\n                                                <div class=\\\"alert alert-success text-center\\\" style=\\\"color:white\\\" *ngIf=\\\"showSuccess == true\\\">\\n                                                    {{ success.message }}\\n                                                </div>\\n                                                <div *ngIf='loading' class='loading'>\\n                                                    <img class='img-fluid' src='assets/loading.gif' alt=\\\"\\\" />\\n                                                </div>\\n                                                <div class=\\\"row\\\">\\n                                                    <div class=\\\"col-md-12 text-center\\\">\\n                                                        <div *ngIf=\\\"total_indirect_savings.value > lc_balance; else sub_enable\\\">\\n                                                            <button class=\\\"btn btn-primary mt-10\\\" type=\\\"submit\\\" disabled>\\n                                                                Product Post\\n                                                            </button>\\n                                                            <div class=\\\"alert\\\">\\n                                                                * Your BTC Balance is not enough. Please charge.\\n                                                            </div>\\n                                                        </div>\\n                                                        <ng-template #sub_enable>\\n                                                            <button class=\\\"btn btn-primary mt-10\\\" type=\\\"submit\\\" [disabled]=\\\"bzp_angForm.invalid\\\">\\n                                                                Product Post\\n                                                            </button>\\n                                                        </ng-template>\\n                                                    </div>\\n                                                </div>\\n                                            </form>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"tab-pane fade\\\" id=\\\"pre-checkout-order\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-pre-checkout-order\\\">\\n                                    <app-pre-checkout-orders></app-pre-checkout-orders>\\n                                </div>\\n                                <div class=\\\"tab-pane fade\\\" id=\\\"open-orders\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-open-orders\\\">\\n                                    <app-open-orders></app-open-orders>\\n                                </div>\\n                                <div class=\\\"tab-pane fade\\\" id=\\\"unclaimed-orders\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-unclaimed-orders\\\">\\n                                    <app-unclaimed-orders></app-unclaimed-orders>\\n                                </div>\\n                                <div class=\\\"tab-pane fade\\\" id=\\\"claimed-orders\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-claimed-orders\\\">\\n                                    <app-claimed-orders></app-claimed-orders>\\n                                </div>\\n                                <div class=\\\"tab-pane fade\\\" id=\\\"sales-inventory\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-sales-inventory\\\">\\n                                    <app-sales-inventory></app-sales-inventory>\\n                                </div>\\n                                <div class=\\\"tab-pane fade\\\" id=\\\"indirect-savings\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-indirect-savings\\\">\\n                                    <app-indirect-savings></app-indirect-savings>\\n                                </div>\\n                                <div class=\\\"tab-pane fade\\\" id=\\\"promo-items\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-promo-items\\\">\\n                                    <app-promo-items></app-promo-items>\\n                                </div>\\n                                <div class=\\\"tab-pane fade\\\" id=\\\"top-rewards\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"list-top-rewards\\\">\\n                                    <app-top-rewards></app-top-rewards>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { HttpService } from '../../services/http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ShareService } from '../../services/share.service';\nimport { SocketService } from '../../services/socket.service';\nimport { CountryCurrencyPriceService } from 'src/app/services/country-currency-price.service';\nimport { Router } from '@angular/router';\nimport { NotificationsService } from 'angular2-notifications';\nimport { environment } from '../../../environments/environment';\nimport Currency from '../../model/currency';\nimport { FileUploader, ParsedResponseHeaders, FileItem } from 'ng2-file-upload';\n\n@Component({\n  selector: 'app-crypto-bazaar',\n  templateUrl: './crypto-bazaar.component.html',\n  styleUrls: ['./crypto-bazaar.component.css']\n})\nexport class CryptoBazaarComponent implements OnInit {\n\n  @ViewChild('agent_savings') agent_savings: ElementRef;\n  @ViewChild('assigned_savings') assigned_savings: ElementRef;\n  @ViewChild('control_cc_price') control_cc_price: ElementRef;\n  @ViewChild('control_lc_price') control_lc_price: ElementRef;\n  @ViewChild('indirect_savings') indirect_savings: ElementRef;\n  @ViewChild('initial_lc_price') initial_lc_price: ElementRef;\n  @ViewChild('lc_btc') lc_btc: ElementRef;\n  @ViewChild('lc_cc') lc_cc: ElementRef;\n  @ViewChild('personal_savings') personal_savings: ElementRef;\n  @ViewChild('total_indirect_savings') total_indirect_savings: ElementRef;\n  @ViewChild('total_product_costs') total_product_costs: ElementRef;\n\n  constructor(private api: HttpService, private share: ShareService,\n    private ccp: CountryCurrencyPriceService, private fb: FormBuilder,\n    private http: HttpClient, private router: Router,\n    private socket: SocketService,\n    private notify: NotificationsService) {\n    this.createForm();\n  }\n\n  uri = environment.backendUrl;\n  loading = false;\n  showSuccess = false;\n  success = { message: '' };\n  bazaar_flag = false;\n\n  btc_conversion_submitted = 0;\n  userInfo: any;\n  lc_balance = 0;\n  currency: Currency = new Currency;\n  cCode = 'PH';\n  curCode = 'PHP';\n  currencyValue = 0;\n\n  angForm: FormGroup;\n  bzp_angForm: FormGroup;\n  bzp_id = 0;\n\n  auto_control_cc_price = 0;\n  auto_initial_lc_price = 0;\n  auto_control_lc_price = 0;\n  auto_indirect_savings = 8;\n  auto_assigned_savings: number;\n  auto_agent_savings: number;\n  auto_personal_savings = 0;\n\n  imgURL: any;\n  bzp_image_name = '';\n\n  public bz_uploader: FileUploader = new FileUploader({\n    url: this.uri + '/images/bazaar/' + this.share.user.id, itemAlias: 'bz_photo'\n  });\n\n  public bzp_uploader: FileUploader = new FileUploader({\n    url: this.uri + '/images/bazaarProd', itemAlias: 'bzp_photo', headers: [{name: 'Accept', value: 'application/json'}]\n  });\n\n  preview(files) {\n    if (files.length === 0) {\n      return;\n    }\n    // console.log(files);\n    const reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n    reader.onload = (_event) => {\n      this.imgURL = reader.result;\n    };\n  }\n\n  onSuccessItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    const data = JSON.parse(response);\n    // console.log(data);\n    this.bzp_image_name = data['name'];\n    console.log(this.bzp_image_name);\n  }\n\n  onErrorItem(item: FileItem, response: string, status: number, headers: ParsedResponseHeaders): any {\n    const error = JSON.parse(response);\n    console.log(error);\n  }\n\n  createForm() {\n    // create bazaar form\n    this.angForm = this.fb.group({\n      bz_name: ['', [Validators.required, Validators.minLength(3)]],\n      city: ['', [Validators.required, Validators.minLength(4)]],\n      address: ['', [Validators.required, Validators.minLength(7)]],\n      shop_rule: ['', [Validators.required, Validators.minLength(20)]],\n      bz_photo: ['', Validators.required]\n    });\n    // create bazaar product form\n    this.bzp_angForm = this.fb.group({\n      bp_name: ['', [Validators.required, Validators.minLength(3)]],\n      availability: ['', [Validators.required, Validators.min(5), Validators.pattern('[0-9]*')]],\n      initial_cc_price: ['', [Validators.required, Validators.min(0), Validators.pattern('[0-9]*')]],\n      assigned_savings: ['', [Validators.required, Validators.min(18), Validators.max(36), Validators.pattern('[0-9]*')]],\n      agent_savings: ['', [Validators.required, Validators.min(1), Validators.max(5), Validators.pattern('[0-9]*')]],\n      product_description: ['', Validators.required],\n      bzp_photo: ['', Validators.required]\n    });\n  }\n\n  cc_lc_Change(initial_cc_price: number) {\n    this.auto_control_cc_price = initial_cc_price;\n    this.auto_initial_lc_price = initial_cc_price;\n    this.auto_control_lc_price = initial_cc_price;\n  }\n\n  saving_Change(saving_value: number, flag: number) {\n    if (flag === 0) {\n      this.auto_assigned_savings = saving_value;\n    } else {\n      this.auto_agent_savings = saving_value;\n    }\n    this.auto_personal_savings = this.auto_assigned_savings - this.auto_agent_savings - this.auto_indirect_savings;\n  }\n\n  async ngOnInit() {\n    this.bz_uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n    this.bzp_uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n    this.bzp_uploader.onErrorItem = (item, response, status, headers) => this.onErrorItem(item, response, status, headers);\n    this.bzp_uploader.onSuccessItem = (item, response, status, headers) => this.onSuccessItem(item, response, status, headers);\n\n    this.api.getToBackend('/admin/getBtcConversionSubmitted/' + this.share.user.id, this.share.user.token).then(async (response: any) => {\n      // console.log(response);\n      this.btc_conversion_submitted = response;\n      if (this.btc_conversion_submitted >= this.socket.BtcConversionTarget) {\n        console.log('what to do?');\n      }\n    });\n    this.api.get(this.uri + '/getLcBalance/' + this.share.user.id).then((response: number) => {\n      this.lc_balance = response['value'];\n    });\n    this.api.get(this.uri + '/getBazaarInfo/' + this.share.user.id).then((response: object) => {\n      if (response['bz_flag'] === 0) {\n        this.bazaar_flag = false;\n      } else {\n        this.bazaar_flag = true;\n      }\n    });\n    // get user country code\n    this.userInfo = await this.ccp.getUserInfo();\n    this.cCode = this.userInfo['countryCode'];\n    // get user country currency code\n    this.curCode = this.currency[`${this.cCode}`];\n    // get user country currency value\n    this.currencyValue = await this.ccp.getCurrencyValue(this.curCode);\n  }\n\n  // create bazaar submit\n  submitFunc() {\n    this.loading = true;\n    const bazaar_uri = this.uri + '/bazaarCreate/' + this.share.user.id;\n    this.http.post(`${bazaar_uri}`, this.angForm.value).subscribe(res => {\n      this.loading = false;\n      // console.log(res);\n      if (res['status'] === 'success') {\n        this.angForm.reset();\n        this.bazaar_flag = true;\n        this.router.navigate(['/cryptobazaar']);\n      }\n    });\n  }\n\n  // create bazaar product submit\n  submitProd(total_lc_amount: number) {\n    this.showSuccess = false;\n    this.loading = true;\n    // console.log('rate ' + this.socket.lc_btc + ' amount_lc ' + total_lc_amount);\n    this.api.postToBackend('/recordOrder', {\n      rate: this.socket.lc_btc,\n      amount_lc: total_lc_amount,\n      type: 'bzpost'\n    }, this.share.user.token).then(res => {\n      console.log('order res ' + res);\n      this.loading = false;\n      this.notify.success('INFO', 'Processing Success!', { timeOut: 5000 });\n      const bz_prod_uri = this.uri + '/bzprodCreate/' + this.share.user.id;\n\n      this.bzp_angForm.value.agent_savings = this.agent_savings.nativeElement.value;\n      this.bzp_angForm.value.assigned_savings = this.assigned_savings.nativeElement.value;\n      this.bzp_angForm.value.control_cc_price = this.control_cc_price.nativeElement.value;\n      this.bzp_angForm.value.control_lc_price = this.control_lc_price.nativeElement.value;\n      this.bzp_angForm.value.indirect_savings = this.indirect_savings.nativeElement.value;\n      this.bzp_angForm.value.initial_lc_price = this.initial_lc_price.nativeElement.value;\n      this.bzp_angForm.value.lc_btc = this.lc_btc.nativeElement.value;\n      this.bzp_angForm.value.lc_cc = this.lc_cc.nativeElement.value;\n      this.bzp_angForm.value.personal_savings = this.personal_savings.nativeElement.value;\n      this.bzp_angForm.value.total_indirect_savings = this.total_indirect_savings.nativeElement.value;\n      this.bzp_angForm.value.total_product_costs = this.total_product_costs.nativeElement.value;\n      this.bzp_angForm.value.bzp_photo = this.bzp_image_name;\n      this.bzp_angForm.value.user_country = this.share.user.user_country;\n\n      this.http.post(`${bz_prod_uri}`, this.bzp_angForm.value).subscribe(async rs => {\n        console.log('product add res ' +  rs);\n        if (rs['status'] === 'success') {\n          this.bzp_angForm.reset();\n          this.success.message = 'Product Successfully Added!';\n          this.showSuccess = true;\n          this.notify.success('INFO', 'Product Successfully Added!', { timeOut: 5000 });\n        }\n      });\n    }).catch(err => {\n      this.notify.error('ERROR', JSON.parse(err._body).payload);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class='row'>\\n    <div class=\\\"col-lg-4 col-md-6 col-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class='qr row'>\\n                    <img class='img-fluid m-auto' src=\\\"{{'https://chart.googleapis.com/chart?cht=qr&chl=bitcoin:' + user.wallet + '&choe=UTF-8&chs=200x200'}}\\\" alt=\\\"\\\" />\\n                </div>\\n                <p class='addr text-center'>{{user.wallet}}</p>\\n                <p class=\\\"text-center\\\"><span class=\\\"btn btn-outline-dark\\\" (click)=\\\"copyToClipboard(user.wallet)\\\">Copy Wallet Address</span></p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-lg-8 col-md-6 col-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <p class=\\\"card-text\\\">Balance: {{socket.btc_balance | number:'0.8-8'}} BTC</p>\\n                <p class=\\\"card-text\\\">Balance: {{socket.lc_balance}} LC</p>\\n            </div>\\n        </div>\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\" *ngIf=\\\"socket.last_transaction\\\">\\n                <p class=\\\"card-text\\\">Last Tx: {{socket.last_transaction.type | txtype}}</p>\\n                <p class=\\\"card-text\\\">Amount: {{socket.last_transaction.amount | number:'0.8-8'}} BTC</p>\\n                <p class=\\\"card-text\\\">Tx Date: {{socket.last_transaction.date | date:'yyyy/MM/dd hh:mm:ss'}}</p>\\n                <p class=\\\"card-text\\\" *ngIf=\\\"socket.last_transaction.wallet\\\">{{socket.last_transaction.type == 'receive' ? \\\"Sender\\\" : \\\"Receiver\\\"}} Address: {{socket.last_transaction.wallet}}</p>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"!socket.last_transaction\\\">\\n                <p class=\\\"card-text\\\">No transaction</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"alert alert-info\\\">\\n    <p>Your referal link: <span>{{ frontendUrl + \\\"/register/\\\" +  user.id}} </span></p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ShareService } from '../../services/share.service'\nimport { SocketService } from '../../services/socket.service';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(\n    private share: ShareService,\n    private socket: SocketService) {\n    \n  }\n\n  user = this.share.user;\n  frontendUrl = environment.frontendUrl;\n  \n  ngOnInit() {\n    \n  }\n\n\n  copyToClipboard = str => {\n    const el = document.createElement('textarea');\n    el.value = str;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    const selected =\n      document.getSelection().rangeCount > 0\n        ? document.getSelection().getRangeAt(0)\n        : false;\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    if (selected) {\n      document.getSelection().removeAllRanges();\n      document.getSelection().addRange(selected);\n    }\n  };\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<p>\\n\\t  faq works!\\n\\t</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.css']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10 offset-1\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <strong>Forgot Password</strong>\\n                </div>\\n                <div class=\\\"card-body col-md-10 offset-1\\\">\\n                    <form [formGroup]=\\\"angForm\\\" novalidate class=\\\"form-horizontal\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"form-col-form-label\\\" for=\\\"email\\\">Eamil</label>\\n                            <input class=\\\"form-control\\\" id=\\\"email\\\" type=\\\"email\\\" formControlName=\\\"email\\\" #email placeholder=\\\"Please type your email address\\\">\\n                        </div>\\n                        <div *ngIf=\\\"angForm.controls['email'].invalid && (angForm.controls['email'].dirty || angForm.controls['email'].touched)\\\" class=\\\"alert alert-danger\\\">\\n                            <div *ngIf=\\\"angForm.controls['email'].errors.required\\\">\\n                                * Email is required!\\n                            </div>\\n                            <div *ngIf=\\\"angForm.controls['email'].errors.email\\\">\\n                                * Email is not valid!\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-12 text-center\\\">\\n                                <button class=\\\"btn btn-danger\\\" (click)=\\\"recovery(email.value)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\">\\n                                  Password Recovery\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ForgotpwService } from 'src/app/services/forgotpw.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  angForm: FormGroup;\n\n  constructor(private fb: FormBuilder, private router: Router, private fps: ForgotpwService) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  recovery(email) {\n    this.fps.recovery(email);\n    this.router.navigate(['/login']);\n  }\n\n}\n","module.exports = \"h2 {\\r\\n    letter-spacing: 1.5px;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-12\\\">\\n        <h2 class=\\\"text-center text-info\\\">PEOPLE HELPING PEOPLE COIN SERVING PEOPLE THROUGHOUT THE WORLD!</h2>\\n    </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-12\\\">\\n        <p>\\n            <strong>\\n        PEOPLE HELPING PEOPLE COIN USED TO CONTROL THE ABUSIVE & UNCONTROLABLE INFLATION RATE THROUGHOUT THE WORLD. THE\\n        PRIMARY PURPOSE OF THIS COIN IS FOR CONSUMERISM. MASTER THE BASIC WORKING FLOW OF COIN PRICE INCREMENTAL VERSUS\\n        PRODUCT PRICE DECREMENTAL. SPEND LESS FOR LEARNING PURPOSE IF YOUR NOT THAT WELL INFORMED ON HOW DOES IT WORKS.\\n        SPEND MORE & ENJOY ONCE YOU’VE MASTERED THE FLOW OF EVERYTHING. ASK FOR ASSISTANCE FROM AGENT WHO REFERED THIS\\n        WEB\\n        APP.\\n      </strong>\\n        </p>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"userInfo; else offline\\\">\\n    <div class=\\\"col-12 col-md-12\\\">\\n        <table class=\\\"table table-borderless table-success table-sm text-center rounded\\\">\\n            <thead>\\n                <tr>\\n                    <th class=\\\"border-0\\\" scope=\\\"col\\\">Your Country : {{ userInfo?.country }}</th>\\n                    <th class=\\\"border-0\\\" scope=\\\"col\\\">Your City : {{ userInfo?.city }}</th>\\n                    <th class=\\\"border-0\\\" scope=\\\"col\\\">Your Country Code : {{ userInfo?.countryCode }}</th>\\n                    <th class=\\\"border-0\\\" scope=\\\"col\\\">Your Time Zone : {{ userInfo?.timezone }}</th>\\n                </tr>\\n            </thead>\\n        </table>\\n    </div>\\n</div>\\n<ng-template #offline>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12 col-md-12 text-center\\\">\\n            <div class=\\\"alert alert-danger error-message\\\" role=\\\"alert\\\">\\n                No internet, you are on offline status.\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-12\\\">\\n        <table class=\\\"table table-borderless table-primary table-sm text-center rounded\\\">\\n            <thead>\\n                <tr>\\n                    <th class=\\\"border-0\\\" scope=\\\"col\\\">1 BTC : {{ socket.btc_usd | number:'0.4-4' }} USD</th>\\n                    <th class=\\\"border-0\\\" scope=\\\"col\\\">1 BTC : {{ socket.btc_usd * currencyValue | number:'0.4-4' }} {{ curCode }}</th>\\n                    <th class=\\\"border-0\\\" scope=\\\"col\\\">1 LC : {{ socket.lc_btc | number:'0.0-15' }} BTC</th>\\n                    <th class=\\\"border-0\\\" scope=\\\"col\\\">1 LC : {{ socket.btc_usd * socket.lc_btc * currencyValue | number:'0.4-4' }} {{ curCode }}</th>\\n                </tr>\\n            </thead>\\n        </table>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-6\\\">\\n        <app-last-convert type=\\\"ltob\\\" [status]=\\\"socket.status_ltob\\\"></app-last-convert>\\n    </div>\\n    <div class=\\\"col-12 col-md-6\\\">\\n        <app-last-convert type=\\\"btol\\\" [status]=\\\"socket.status_btol\\\"></app-last-convert>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"!share.user\\\">\\n    <div class=\\\"col-12 col-md-6 my-3\\\">\\n        <a [routerLink]=\\\"['/register']\\\" class=\\\" btn btn-outline-dark btn-lg btn-block\\\">Free Signup</a>\\n    </div>\\n    <div class=\\\"col-12 col-md-6 my-3\\\">\\n        <a [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-outline-dark btn-lg btn-block\\\">Login</a>\\n    </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"text-center\\\">Total Users:</h3>\\n                <h4 class=\\\"text-center\\\">{{ socket.total_user }}</h4>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"text-center\\\">Online Now:</h3>\\n                <h4 class=\\\"text-center\\\">{{ socket.online_user }}</h4>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"text-center\\\">Overall BTC Received:</h3>\\n                <h4 class=\\\"text-center\\\">{{ socket.btc_received_count }}</h4>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"text-center\\\">Overall BTC Sent:</h3>\\n                <h4 class=\\\"text-center\\\">{{ socket.btc_sent_count }}</h4>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"text-center\\\">BTC Received Today:</h3>\\n                <h4 class=\\\"text-center\\\">{{ socket.btc_received_today_count }}</h4>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-md-4\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"text-center\\\">BTC Sent Today:</h3>\\n                <h4 class=\\\"text-center\\\">{{ socket.btc_sent_today_count }}</h4>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../../services/socket.service';\nimport { ShareService } from '../../services/share.service';\nimport { HttpService } from 'src/app/services/http.service';\nimport { CountryCurrencyPriceService } from '../../services/country-currency-price.service';\nimport Currency from '../../model/currency';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  // variable define\n  userInfo: any;\n  currency: Currency = new Currency;\n  cCode = 'PH';\n  curCode = 'PHP';\n  currencyValue = 0;\n  interval: any;\n\n  constructor(\n    private socket: SocketService,\n    private share: ShareService,\n    private ccp: CountryCurrencyPriceService,\n    private api: HttpService\n  ) {\n  }\n\n  async ngOnInit() {\n    // get user country code\n    this.userInfo = await this.ccp.getUserInfo();\n    // user country code\n    this.cCode = this.userInfo['countryCode'];\n    // get user country currency code\n    this.curCode = this.currency[`${this.cCode}`];\n    // get user country currency value\n    this.currencyValue = await this.ccp.getCurrencyValue(this.curCode);\n    // periodly update\n    this.interval = setInterval(async () => {\n      this.currencyValue = await this.ccp.getCurrencyValue(this.curCode);\n    }, 1200000);\n  }\n\n}\n","module.exports = \"h4 {\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\np {\\r\\n    font-size: 1.2rem;\\r\\n}\\r\\n\\r\\nhr {\\r\\n    height: 1px;\\r\\n    width: 60%;\\r\\n    background-color: grey;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-12 text-center\\\">\\n        <h2><strong>How It Works?</strong></h2>\\n    </div>\\n</div>\\n<hr>\\n\\n<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n            <div class=\\\"card border-primary\\\">\\n                <div class=\\\"card-header\\\">\\n                    <strong>People Helping People As Inflation Controller</strong>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p>\\n                        User can participate in buying & selling products in online community. Seller can create bazaar display page & able to post respective products & services. The system will charge the posting costs of commodities base on the price being displayed in the\\n                        page. Charges will vary from 18 percent to 36 percent base on the commodity price.\\n                        <br> Buyer can buy products in the website using <strong>“Crypto Currency”</strong> payment. Buyer will be having load to his/her “PHPC” wallet in order to do purchasing commodities. Prices of commodities inside the website is\\n                        <strong>“VOLATILE”</strong> depends on the market performance of crypto currency in the market. The commodity prices will drop once the <strong>“PHPC”</strong> price increased and the price of commodity will rise once the\\n                        <strong>“PHPC”</strong> price decreased. But buyer can still buy the commodities inside the website by setting the desired buying price at their affordable price to pay. Meaning buyer can set price into their desired lower price.\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n            <div class=\\\"card border-success\\\">\\n                <div class=\\\"card-header\\\">\\n                    <strong>People Helping People As Employer & Job Seeker</strong>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p>\\n                        User of this website can post their skills, ability & talent as a job seeker. The other way around users can also post job vacancies if they want to hire some people in an specific field of works, then comply their requirements along the way of hiring\\n                        transactions.\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n            <div class=\\\"card border-warning\\\">\\n                <div class=\\\"card-header\\\">\\n                    <strong>People Helping People As Alkansya or Coin Bank</strong>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p>\\n                        User can do savings by loading <strong>“Crypto Currency”</strong> wallet & convert from <strong>“BTC Wallet” to “PHPC Wallet”</strong>. After conversion of “BTC”, check the price value of “PHPC” at the time of conversion. The user\\n                        can reconvert the coin from <strong>“PHPC Wallet” back to “BTC Wallet”</strong> once the price of “PHPC” will reach to 25% increase from the time of “BTC” conversion submitted. Example: conversion price from “BTC Wallet” is 1 PHPC\\n                        = 0.00001653. So do this mathematics, 1653 multiply to 0.25 the answer is 413.25. Now you only get the whole number and add the whole number to the price of conversion you did, 1653 add the 413 the answer is 2,066. Now the target\\n                        conversion price from “PHPC Wallet” to “BTC Wallet” is 2,066. Once the price is 0.00002066 you can proceed the conversion from “PHPC Wallet” to “BTC Wallet”. If the user follow the said conversion rule religiously, the “Crypto\\n                        Currency” load balance will increased by its value.\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"animated fadeIn\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12 col-md-12\\\">\\n            <div class=\\\"card border-danger\\\">\\n                <div class=\\\"card-header\\\">\\n                    <strong>People Helping People As Rewarding Commodities</strong>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p>\\n                        User can participate in buying, selling & leadership of consumers. Top 10 from buyers, sellers, & network leaders will receive reward base on the sales. Reward program will be daily, weekly & monthly sales base.\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-it-works',\n  templateUrl: './how-it-works.component.html',\n  styleUrls: ['./how-it-works.component.css']\n})\nexport class HowItWorksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <form name='form' (ngSubmit)=\\\"f.form.valid && submit()\\\" #f=\\\"ngForm\\\" class='d-flex flex-wrap flex-column m-auto pt-4' novalidate>\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class='form-group m-auto '>\\n                <label for=\\\"email\\\">Email</label>\\n                <input class='form-control' required type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]='user.email' #email=\\\"ngModel\\\">\\n            </div>\\n            <!--validate Email-->\\n            <div *ngIf=' f.submitted && email.invalid' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n                <div *ngIf=\\\"email.errors.required\\\">\\n                    <small>Email is required.</small>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class='form-group  m-auto'>\\n                <label for=\\\"password\\\">Password</label>\\n                <input class='form-control' type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" required [(ngModel)]='user.password' #password='ngModel'>\\n            </div>\\n            <!--validate Password-->\\n            <div *ngIf=' f.submitted && password.invalid' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n                <div *ngIf=\\\"password.errors.required\\\">\\n                    <small>password is required.</small>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf='loading' class='loading'>\\n            <img class='img-fluid' src='assets/loading.gif' alt=\\\"\\\" />\\n        </div>\\n\\n        <div class='input-wrap m-auto col-12 col-lg-7 m-auto'>\\n            <div *ngIf='showError' class=\\\"alert alert-danger error-message\\\" role=\\\"alert\\\">\\n                <small>{{error.message}}</small>\\n            </div>\\n        </div>\\n\\n        <div class=' m-auto'>\\n            <button class='btn btn-success mt-2 ' type='submit'>Login</button>\\n        </div>\\n\\n        <div class='text-center mt-2'>\\n            <small>Not yet Member? <a [routerLink]=\\\"['/register']\\\"> Sign up</a></small>\\n            <small class=\\\"ml-10\\\"><a class=\\\"text-danger\\\" [routerLink]=\\\"['/forgot']\\\">Forgot password?</a></small>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { Router } from '@angular/router';\nimport { ShareService } from '../../services/share.service';\nimport { StorageService } from '../../services/storage.service';\nimport { SocketService } from '../../services/socket.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loading = false;\n  showError = false;\n  error = {\n    message: ''\n  };\n  user: User = {\n    email: '',\n    password: ''\n  };\n  constructor(\n    private http: HttpService,\n    private router: Router,\n    private storage: StorageService,\n    private share: ShareService,\n    private socket: SocketService) { }\n\n  ngOnInit() {\n    if (this.share.user) {\n      this.router.navigate(['home']);\n    }\n  }\n\n  submit() {\n    this.loading = true;\n    this.http.postToBackend('/login', this.user)\n      .then((result: any) => {\n        const user = result.payload;\n        /* Save User To Local Storage */\n        this.storage.saveUser(user);\n        this.share.updateUser(user);\n        this.socket.reconnect();\n        this.loading = false;\n        this.router.navigate(['home']);\n      })\n      .catch(err => {\n        this.loading = false;\n        this.showError = true;\n        this.error.message = JSON.parse(err._body).payload;\n      });\n  }\n\n}\n\ninterface User {\n  email: String;\n  password: String;\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<app-subheader action=\\\"open-order\\\"></app-subheader>\\n\\t<table class=\\\"table  table-responsive-xl\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<th>Amount</th>\\n\\t\\t\\t<th>Price</th>\\n\\t\\t\\t<th>BTC Amount Paid</th>\\n\\t\\t\\t<th>Total BTC Price To Receive</th>\\n\\t\\t\\t<th>Conversion Type</th>\\n\\t\\t\\t<th>Date</th>\\n\\t\\t\\t<th>Action</th>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor='let order of orders'>\\n\\t\\t\\t\\t<td>{{ order.lcamount }}</td>\\n\\t\\t\\t\\t<td>{{ order.rate | number:'0.0-15' }}</td>\\n\\t\\t\\t\\t<td>{{ order.btc_paid ? order.btc_paid : \\\"---\\\" }}</td>\\n\\t\\t\\t\\t<td>{{ order.btc_receive ? order.btc_receive : \\\"---\\\" }}</td>\\n\\t\\t\\t\\t<td>{{ order.type == 'btol' ? 'BTC To LC' : 'LC To BTC' }}</td>\\n\\t\\t\\t\\t<td>{{ order.date | date:'yyyy/MM/dd hh:mm:ss' }}</td>\\n\\t\\t\\t\\t<td class=\\\"py-1\\\"><button class=\\\"btn btn-default btn-sm\\\"  (click)=\\\"cancel(order._id)\\\">Cancel</button></td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service'\nimport { ShareService } from '../../services/share.service'\nimport { SocketService } from '../../services/socket.service'\n\n@Component({\n  selector: 'app-openorder',\n  templateUrl: './openorder.component.html',\n  styleUrls: ['./openorder.component.css']\n})\nexport class OpenorderComponent implements OnInit {\n\n  constructor(private api: HttpService, private share: ShareService, private socket: SocketService) { }\n  orders = [];\n  ngOnInit() {\n  \tthis.api.getToBackend('/getOpenOrders', this.share.user.token).then((result: any) => {\n  \t\tthis.orders = result\n  \t\tconsole.log(result)\n  \t})\n  }\n  cancel(orderid) {\n    if(confirm(\"Do you realy cancel this order?\"))  {\n\n      this.api.postToBackend('/cancelOrder', {orderid: orderid}, this.share.user.token).then((result: any) => {\n        this.orders = result;\n      });\n    }\n\n  }\n}\n","module.exports = \".logo {\\r\\n    margin-bottom:20px !important;\\r\\n}\"","module.exports = \"<script src=\\\"../../../../node_modules/angular-countries/dist/js/ngCountries.js\\\"></script>\\n<div class=\\\"container\\\">\\n    <form class='d-flex flex-wrap flex-column m-auto pt-4' #f=\\\"ngForm\\\" (ngSubmit)=\\\"f.form.valid && submit()\\\" name=\\\"form\\\">\\n\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class=\\\"form-row\\\">\\n                <div class=\\\"col\\\">\\n                    <label for=\\\"first_name\\\">First Name:</label>\\n                    <input type=\\\"text\\\" name=\\\"first_name\\\" id=\\\"first_name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.first_name\\\" #first_name=\\\"ngModel\\\">\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <label for=\\\"last_name\\\">Last Name:</label>\\n                    <input type=\\\"text\\\" name=\\\"last_name\\\" id=\\\"last_name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.last_name\\\" #last_name=\\\"ngModel\\\">\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class='form-group m-auto'>\\n                <label for=\\\"email\\\">Email Address:</label>\\n                <input class='form-control' type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" required email=\\\"true\\\" [(ngModel)]='user.email' #email=\\\"ngModel\\\">\\n            </div>\\n            <!--validate Email-->\\n            <div *ngIf='f.submitted && email.invalid' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n                <div *ngIf=\\\"email.errors.required\\\">\\n                    <small>Email is required.</small>\\n                </div>\\n                <div *ngIf=\\\"email.errors.email\\\">\\n                    <small>Invalid email address.</small>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class='form-group m-auto'>\\n                <label for=\\\"phonenumber\\\">Mobile Phone:</label>\\n                <input class='form-control' type=\\\"text\\\" id=\\\"phonenumber\\\" name=\\\"phonenumber\\\" required pattern=\\\"[-+()0-9]{8,}\\\" [(ngModel)]='user.phonenumber' #phone=\\\"ngModel\\\">\\n            </div>\\n            <!--validate Phone-->\\n            <div *ngIf='f.submitted && phone.invalid' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n                <div *ngIf=\\\"phone.errors.required\\\">\\n                    <small>Phone is required.</small>\\n                </div>\\n                <div *ngIf=\\\"phone.errors.pattern\\\">\\n                    <small>Invalid phone number.</small>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class='form-group m-auto'>\\n                <label for=\\\"agent_id\\\">Agent ID:</label>\\n                <input class='form-control' type=\\\"text\\\" id=\\\"agent_id\\\" name=\\\"agent_id\\\" [(ngModel)]='user.agent_id' #agent_id=\\\"ngModel\\\">\\n            </div>\\n        </div>\\n\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class='form-group m-auto'>\\n                <label for=\\\"password\\\">Password:</label>\\n                <input class='form-control' type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]='user.password' #password='ngModel' minlength=\\\"6\\\" required>\\n            </div>\\n            <!--validate Password-->\\n            <div *ngIf='f.submitted && password.invalid' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n                <div *ngIf=\\\"password.errors.required\\\">\\n                    <small>password is required.</small>\\n                </div>\\n                <div *ngIf=\\\"password.errors.minlength\\\">\\n                    <small>minimum length greater than 5.</small>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class='form-group m-auto'>\\n                <label for=\\\"re_password\\\">Retype Password:</label>\\n                <input class='form-control' type=\\\"password\\\" id=\\\"re_password\\\" name=\\\"re_password\\\" [(ngModel)]='user.re_password' [appRetypepassword]=\\\"user.password\\\" required minlength=\\\"6\\\" #re_password=\\\"ngModel\\\">\\n            </div>\\n            <!--validate Password-->\\n            <div *ngIf='f.submitted && re_password.invalid' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n                <div *ngIf=\\\"re_password.errors.required\\\">\\n                    <small>re-type password is required.</small>\\n                </div>\\n                <div *ngIf=\\\"re_password.errors.appRetypepassword\\\">\\n                    <small>re-type password not match password.</small>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class='form-group m-auto'>\\n                <label for=\\\"user_country\\\">Country</label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"user_country\\\" required name=\\\"user_country\\\" [(ngModel)]='user.user_country' readonly #user_country=\\\"ngModel\\\">\\n            </div>\\n            <div *ngIf='!user_country.value' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n                <div *ngIf=\\\"user_country.errors.required\\\">\\n                    <small>You are on offline or can't get your information. Please refresh and retry later.</small>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class='input-wrap col-12 col-lg-7 m-auto'>\\n            <div class='form-group m-auto'>\\n                <label for=\\\"currency_val\\\">Currency Value (1USD)</label>\\n                <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"currency_val\\\" required name=\\\"currency_val\\\" [(ngModel)]='user.currency_val' readonly #currency_val=\\\"ngModel\\\">\\n            </div>\\n            <div *ngIf='!currency_val.value' class=\\\"alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n                <div *ngIf=\\\"currency_val.errors.required\\\">\\n                    <small>You are on offline or can't get your information. Please refresh and retry later.</small>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf='loading' class='loading'>\\n            <img class='img-fluid' src='assets/loading.gif' alt=\\\"\\\" />\\n        </div>\\n        <div class='input-wrap m-auto col-12 col-lg-7 m-auto'>\\n            <div *ngIf='showError' class=\\\"alert alert-danger error-message\\\" role=\\\"alert\\\">\\n                <small>{{error.message}}</small>\\n            </div>\\n        </div>\\n        <div class='mt-3 m-auto'>\\n            <button class='btn btn-success  mt-2' type='submit' [disabled]=\\\"f.invalid\\\">Submit</button>\\n        </div>\\n        <div class='text-center mt-2'>\\n            <small>Already have account? <a [routerLink]=\\\"['/login']\\\"> Login</a></small>\\n        </div>\\n    </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { StorageService } from '../../services/storage.service';\nimport { ShareService } from '../../services/share.service';\nimport { SocketService } from '../../services/socket.service';\nimport { CountryCurrencyPriceService } from '../../services/country-currency-price.service';\nimport Currency from '../../model/currency';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private http: HttpService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private storage: StorageService,\n    private share: ShareService,\n    private socket: SocketService,\n    private ccp: CountryCurrencyPriceService\n    ) { }\n\n  loading = false;\n  showError = false;\n  error = {\n    message: ''\n  };\n\n  user: User = {\n    first_name: '',\n    last_name: '',\n    email: '',\n    phonenumber: '',\n    password: '',\n    re_password: '',\n    agent_id: '',\n    user_country: '',\n    currency_val: ''\n  };\n\n  userInfo: any;\n  currency: Currency = new Currency;\n  cCode = 'PH';\n  curCode = 'PHP';\n  currencyValue = 0;\n\n  submit() {\n    this.loading = true;\n    this.http.postToBackend('/register', this.user)\n      .then((result: any) => {\n        const user = result.payload;\n        this.storage.saveUser(user);\n        this.share.updateUser(user);\n        this.socket.reconnect();\n        this.loading = false;\n        this.router.navigate(['/home']);\n      })\n      .catch(err => {\n        if (err.status === 422) {\n          this.showError = true;\n          this.loading = false;\n          this.error.message = 'Please enter required field';\n        } else {\n          this.showError = true;\n          this.loading = false;\n          this.error.message = JSON.parse(err._body).payload;\n        }\n      });\n  }\n\n  async ngOnInit() {\n    // get user country code\n    this.userInfo = await this.ccp.getUserInfo();\n    // user country code\n    this.user.user_country = this.userInfo['country'];\n    this.cCode = this.userInfo['countryCode'];\n    // get user country currency code\n    this.curCode = this.currency[`${this.cCode}`];\n    // get user country currency value\n    this.currencyValue = await this.ccp.getCurrencyValue(this.curCode);\n    this.user.currency_val = this.currencyValue + ' ' + this.curCode;\n\n    const id = +this.route.snapshot.paramMap.get('id');\n    if (id > 0) {\n      this.storage.saveAgentID(String(id));\n      this.user.agent_id = String(id);\n    } else {\n      this.user.agent_id = this.storage.getAgentID();\n    }\n    console.log(this.user.agent_id);\n    if (this.storage.getUser()) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n}\n\ninterface User {\n  first_name: String;\n  last_name: String;\n  email: String;\n  password: String;\n  re_password: String;\n  phonenumber: String;\n  agent_id: String;\n  user_country: String;\n  currency_val: String;\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<app-subheader action=\\\"successful-order\\\"></app-subheader>\\n\\t<table class=\\\"table table-responsive-xl\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<th>Amount (LC)</th>\\n\\t\\t\\t<th>Price</th>\\n\\t\\t\\t<th>BTC Amount Paid</th>\\n\\t\\t\\t<th>Total BTC Price To Received</th>\\n\\t\\t\\t<th>Conversion Type</th>\\n\\t\\t\\t<th>Date</th>\\n\\t\\t\\t<th>Fee (LC)</th>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor='let order of orders'>\\n\\t\\t\\t\\t<td>{{ order.lcamount }}</td>\\n\\t\\t\\t\\t<td>{{ order.rate | number:'0.0-15' }}</td>\\n\\t\\t\\t\\t<td>{{ order.btc_paid ? order.btc_paid : \\\"---\\\" }}</td>\\n\\t\\t\\t\\t<td>{{ order.btc_receive ? order.btc_receive : \\\"---\\\" }}</td>\\n\\t\\t\\t\\t<td>{{ order.type == 'btol' ? 'BTC To LC' : 'LC To BTC' }}</td>\\n\\t\\t\\t\\t<td>{{ order.date  | date:'yyyy/MM/dd hh:mm:ss'}}</td>\\n\\t\\t\\t\\t<td>{{ order.fee | number:'0.0-5' }}</td>\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service'\nimport { ShareService } from '../../services/share.service'\n@Component({\n  selector: 'app-successfulorder',\n  templateUrl: './successfulorder.component.html',\n  styleUrls: ['./successfulorder.component.css']\n})\nexport class SuccessfulorderComponent implements OnInit {\n\n  constructor(private api: HttpService, private share: ShareService) { }\n  orders = [];\n  ngOnInit() {\n  \tthis.api.getToBackend('/getSuccessfulOrders', this.share.user.token).then((result: any) => {\n  \t\tthis.orders = result\n  \t\tconsole.log(result)\n  \t})\n  }\n\n}\n","module.exports = \"td.first::first-letter{\\r\\n\\ttext-transform: uppercase;\\r\\n}\"","module.exports = \"\\t<div class=\\\"row\\\">\\n\\t\\t\\n\\t\\t<div class=\\\"col-12 col-md-6\\\">\\n\\t\\t\\t<div class=\\\"alert alert-success\\\">\\n\\t\\t\\t\\tOverall BTC Received: {{ overall_received | btc }}BTC\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-12 col-md-6\\\">\\n\\t\\t\\t<div class=\\\"alert alert-success\\\">\\n\\t\\t\\t\\tOverall BTC Sent: {{ overall_sent | btc }}BTC\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-12 col-md-6\\\">\\n\\t\\t\\t<div class=\\\"alert alert-success\\\">\\n\\t\\t\\t\\tOverall Reward Received: {{ overall_reward | btc }}BTC\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-12 col-md-6\\\">\\n\\t\\t\\t<div class=\\\"alert alert-success\\\">\\n\\t\\t\\t\\tReferred Traders: {{ referred_count }}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\n\\t\\t<div class=\\\"btn-group col-12 mb-3 d-block\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n\\t\\t  <button type=\\\"button\\\" class=\\\"btn \\\" [ngClass]=\\\"{'btn-primary': type=='all'}\\\" (click)=\\\"show('all')\\\">All Transaction</button>\\n\\t\\t  <button type=\\\"button\\\" class=\\\"btn \\\" [ngClass]=\\\"{'btn-primary': type=='reward'}\\\" (click)=\\\"show('reward')\\\">Reward Received Only</button>\\n\\t\\t  <button type=\\\"button\\\" class=\\\"btn \\\" [ngClass]=\\\"{'btn-primary': type=='received'}\\\" (click)=\\\"show('received')\\\">BTC Received Only</button>\\n\\t\\t  <button type=\\\"button\\\" class=\\\"btn \\\" [ngClass]=\\\"{'btn-primary': type=='sent'}\\\" (click)=\\\"show('sent')\\\">BTC Sent Only</button>\\n\\t\\t</div>\\n\\t</div>\\n\\t<table class=\\\"table table-responsive-xl\\\" *ngIf=\\\"type!='received'\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<th>ID</th>\\n\\t\\t\\t<th>Date</th>\\n\\t\\t\\t<th style=\\\"width: 14%\\\">Amount</th>\\n\\t\\t\\t<th style=\\\"width: 14%\\\">Previous Amount</th>\\n\\t\\t\\t<th style=\\\"width: 14%\\\">New Amount</th>\\n\\t\\t\\t<th>Type</th>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor='let transaction of display'>\\n\\t\\t\\t\\t<td>{{ transaction._id }}</td>\\n\\t\\t\\t\\t<td>{{ transaction.date | date:'yyyy/MM/dd hh:mm:ss' }}</td>\\n\\t\\t\\t\\t<td>{{ transaction.amount | btc }}</td>\\n\\t\\t\\t\\t<td>{{ transaction.old | btc}}</td>\\n\\t\\t\\t\\t<td>{{ transaction.new | btc }}</td>\\n\\t\\t\\t\\t<td class=\\\"first\\\">{{ transaction.type }}</td>\\n\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\n\\t</table>\\n\\t<table class=\\\"table table-responsive-xl\\\" *ngIf=\\\"type=='received'\\\">\\n\\t\\t<thead>\\n\\t\\t\\t<th>ID</th>\\n\\t\\t\\t<th>Date</th>\\n\\t\\t\\t<th>Amount</th>\\n\\t\\t\\t<th>Network Fee</th>\\n\\t\\t\\t<th>Receivable Amount</th>\\n\\t\\t\\t<th>Previous Amount</th>\\n\\t\\t\\t<th>New Amount</th>\\n\\t\\t\\t<th>Type</th>\\n\\t\\t</thead>\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor='let transaction of display'>\\n\\t\\t\\t\\t<td>{{ transaction._id }}</td>\\n\\t\\t\\t\\t<td>{{ transaction.date | date:'yyyy/MM/dd hh:mm:ss' }}</td>\\n\\t\\t\\t\\t<td>{{ transaction.amount | btc }}</td>\\n\\t\\t\\t\\t<td>{{ transaction.fee | btc }}</td>\\n\\t\\t\\t\\t<td>{{ transaction.amount - transaction.fee | btc }}</td>\\n\\t\\t\\t\\t<td>{{ transaction.old | btc}}</td>\\n\\t\\t\\t\\t<td>{{ transaction.new | btc }}</td>\\n\\t\\t\\t\\t<td class=\\\"first\\\">{{ transaction.type }}</td>\\n\\t\\t\\t\\t\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t\\t\\n\\t</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../services/http.service';\nimport { ShareService } from '../../services/share.service';\n\n@Component({\n  selector: 'app-txhistory',\n  templateUrl: './txhistory.component.html',\n  styleUrls: ['./txhistory.component.css']\n})\nexport class TxhistoryComponent implements OnInit {\n\n  constructor(private api: HttpService, private share: ShareService) { }\n  transactions = [];\n  overall_received = 0;\n  overall_sent = 0;\n  overall_reward = 0;\n  display = [];\n  type;\n  referred_count = 0;\n  ngOnInit() {\n  \tthis.type = 'all';\n  \tthis.api.getToBackend('/getAllTransactions', this.share.user.token).then((response:any) => {\n  \t\tthis.transactions = response;\n  \t\tthis.display = this.transactions;\n  \t\tresponse.map(transaction => {\n  \t\t\tif(transaction.type == 'sent') {\n  \t\t\t\tthis.overall_sent += transaction.amount;\n  \t\t\t}\n  \t\t\tif(transaction.type == 'received') {\n  \t\t\t\tthis.overall_received += transaction.amount;\n  \t\t\t}\n        if(transaction.type == 'reward') {\n          this.overall_reward += transaction.amount;\n        }\n  \t\t})\n  \t})\n    this.api.getToBackend('/getReferredCount', this.share.user.token).then((response:any) => {\n      this.referred_count = response.result;\n    })\n  }\n\n  show(type) {\n  \tthis.type = type;\n  \tthis.display = this.transactions.filter(transaction => {\n  \t\tif(type == 'all') return true;\n  \t\treturn transaction.type == type;\n  \t})\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"send()\\\">\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-sm-3 col-form-label\\\">1 BTC: </label>\\n    <label class=\\\"col-sm-9 col-form-label\\\">{{ socket.btc_usd | number:'0.4-4' }} USD</label>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-sm-3 col-form-label\\\">Balance: </label>\\n    <label class=\\\"col-sm-9 col-form-label\\\">{{ socket.btc_balance | number:'0.8-8' }} BTC</label>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputEmail3\\\" class=\\\"col-sm-3 col-form-label\\\">Wallet Address: </label>\\n    <div class=\\\"col-sm-9\\\">\\n      <input type=\\\"text\\\" name=\\\"address\\\" class=\\\"form-control\\\" id=\\\"wallet_address\\\"\\n        placeholder=\\\"Enter wallet address here...\\\" [(ngModel)]='sendData.target'>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label for=\\\"inputPassword3\\\" class=\\\"col-sm-3 col-form-label\\\">Amount: </label>\\n    <div class=\\\"col-sm-9\\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"amount\\\" id=\\\"amount\\\" placeholder=\\\"Enter amount here...\\\"\\n        [(ngModel)]='sendData.amount'>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-sm-3 col-form-label\\\">Total Deductible to balance: </label>\\n    <label class=\\\"col-sm-9 col-form-label\\\">\\n      {{ addFee()  }}\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-sm-3 col-form-label\\\">Important: </label>\\n    <label class=\\\"col-sm-9 col-form-label\\\">\\n      Transaction fee will be 0.0001 BTC\\n    </label>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-sm-3 col-form-label\\\"></label>\\n    <div class=\\\"col-sm-9\\\">\\n      <div *ngIf='showError' class=\\\" alert alert-danger mt-2\\\" role=\\\"alert\\\">\\n        {{error.message}}\\n      </div>\\n      <div *ngIf='showResult' class=\\\" alert alert-success mt-2\\\" role=\\\"alert\\\">\\n        {{result.message}}\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngIf='loading' class='loading'>\\n    <img class='img-fluid' src='assets/loading.gif' alt=\\\"\\\" />\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-sm-3 col-form-label\\\"></label>\\n    <div class=\\\"col-sm-9\\\">\\n      <button *ngIf='!loading' type=\\\"submit\\\" class=\\\"btn btn-primary\\\"\\n        [disabled]=\\\"sendData.target == '' || sendData.amount < 0.0001 || socket.btc_balance < addFee()\\\">Send</button>\\n    </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ShareService } from '../../services/share.service';\nimport { HttpService } from '../../services/http.service';\nimport { SocketService } from '../../services/socket.service';\n\n@Component({\n  selector: 'app-withdrawal',\n  templateUrl: './withdrawal.component.html',\n  styleUrls: ['./withdrawal.component.css']\n})\nexport class WithdrawalComponent implements OnInit {\n  loading = false;\n  sendData = {\n    target: '',\n    amount: '0'\n  };\n  showResult = false;\n  showError = false;\n  result = {\n    message: ''\n  };\n  error = {\n    message: ''\n  };\n\n  constructor(\n    private api: HttpService,\n    private share: ShareService,\n    private socket: SocketService) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  send() {\n    this.loading = true;\n    this.showError = false;\n    this.showResult = false;\n    this.error.message = '';\n    this.result.message = '';\n\n    this.api\n      .postToBackend('/send', {\n        to: this.sendData.target,\n        amount: this.sendData.amount\n      }, this.share.user.token)\n      .then(result => {\n        this.loading = false;\n        this.showResult = true;\n        this.result.message = 'successfully';\n      })\n      .catch(err => {\n        this.loading = false;\n        this.showError = true;\n        if (err.status === 401) {\n          this.error.message = 'user token expired';\n        } else {\n          const ResponseObject = JSON.parse(err._body).payload;\n          // console.log(JSON.parse(err._body));\n          // console.log(ResponseObject);\n          this.error.message = ResponseObject;\n          // if ('response' in ResponseObject) {\n          //   this.error.message = ResponseObject.response.text;\n          // } else {\n          //   this.error.message = ResponseObject;\n          // }\n        }\n      });\n  }\n\n  addFee() {\n    return (+this.sendData.amount + 0.0001).toFixed(8);\n  }\n}\n","export default class Currency {\r\n    AF = 'AFN';\r\n    AL = 'ALL';\r\n    DZ = 'DZD';\r\n    AS = 'USD';\r\n    AD = 'EUR';\r\n    AO = 'AOA';\r\n    AI = 'XCD';\r\n    AG = 'XCD';\r\n    AR = 'ARS';\r\n    AM = 'AMD';\r\n    AW = 'AWG';\r\n    AU = 'AUD';\r\n    AT = 'EUR';\r\n    AZ = 'AZN';\r\n    BS = 'BSD';\r\n    BH = 'BHD';\r\n    BD = 'BDT';\r\n    BB = 'BBD';\r\n    BY = 'BYR';\r\n    BE = 'EUR';\r\n    BZ = 'BZD';\r\n    BJ = 'XOF';\r\n    BM = 'BMD';\r\n    BT = 'BTN';\r\n    BO = 'BOB';\r\n    BQ = 'USD';\r\n    BA = 'BAM';\r\n    BW = 'BWP';\r\n    BV = 'NOK';\r\n    BR = 'BRL';\r\n    IO = 'USD';\r\n    BN = 'BND';\r\n    BG = 'BGN';\r\n    BF = 'XOF';\r\n    BI = 'BIF';\r\n    CV = 'CVE';\r\n    KH = 'KHR';\r\n    CM = 'XAF';\r\n    CA = 'CAD';\r\n    KY = 'KYD';\r\n    CF = 'XAF';\r\n    TD = 'XAF';\r\n    CL = 'CLF';\r\n    CN = 'CNY';\r\n    CX = 'AUD';\r\n    CC = 'AUD';\r\n    CO = 'COP';\r\n    KM = 'KMF';\r\n    CD = 'CDF';\r\n    CG = 'XAF';\r\n    CK = 'NZD';\r\n    CR = 'CRC';\r\n    HR = 'HRK';\r\n    CU = 'CUP';\r\n    CW = 'ANG';\r\n    CY = 'EUR';\r\n    CZ = 'CZK';\r\n    CI = 'XOF';\r\n    DK = 'DKK';\r\n    DJ = 'DJF';\r\n    DM = 'XCD';\r\n    DO = 'DOP';\r\n    EC = 'USD';\r\n    EG = 'EGP';\r\n    SV = 'SVC';\r\n    GQ = 'XAF';\r\n    ER = 'ERN';\r\n    EE = 'EUR';\r\n    ET = 'ETB';\r\n    FK = 'FKP';\r\n    FO = 'DKK';\r\n    FJ = 'FJD';\r\n    FI = 'EUR';\r\n    FR = 'EUR';\r\n    GF = 'EUR';\r\n    PF = 'XPF';\r\n    TF = 'EUR';\r\n    GA = 'XAF';\r\n    GM = 'GMD';\r\n    GE = 'GEL';\r\n    DE = 'EUR';\r\n    GH = 'GHS';\r\n    GI = 'GIP';\r\n    GR = 'EUR';\r\n    GL = 'DKK';\r\n    GD = 'XCD';\r\n    GP = 'EUR';\r\n    GU = 'USD';\r\n    GT = 'GTQ';\r\n    GG = 'GBP';\r\n    GN = 'GNF';\r\n    GW = 'XOF';\r\n    GY = 'GYD';\r\n    HT = 'HTG';\r\n    HM = 'AUD';\r\n    VA = 'EUR';\r\n    HN = 'HNL';\r\n    HK = 'HKD';\r\n    HU = 'HUF';\r\n    IS = 'ISK';\r\n    IN = 'INR';\r\n    ID = 'IDR';\r\n    IR = 'IRR';\r\n    IQ = 'IQD';\r\n    IE = 'EUR';\r\n    IM = 'GBP';\r\n    IL = 'ILS';\r\n    IT = 'EUR';\r\n    JM = 'JMD';\r\n    JP = 'JPY';\r\n    JE = 'GBP';\r\n    JO = 'JOD';\r\n    KZ = 'KZT';\r\n    KE = 'KES';\r\n    KI = 'AUD';\r\n    KP = 'KPW';\r\n    KR = 'KRW';\r\n    KW = 'KWD';\r\n    KG = 'KGS';\r\n    LA = 'LAK';\r\n    LV = 'EUR';\r\n    LB = 'LBP';\r\n    LS = 'LSL';\r\n    LR = 'LRD';\r\n    LY = 'LYD';\r\n    LI = 'CHF';\r\n    LT = 'EUR';\r\n    LU = 'EUR';\r\n    MO = 'MOP';\r\n    MK = 'MKD';\r\n    MG = 'MGA';\r\n    MW = 'MWK';\r\n    MY = 'MYR';\r\n    MV = 'MVR';\r\n    ML = 'XOF';\r\n    MT = 'EUR';\r\n    MH = 'USD';\r\n    MQ = 'EUR';\r\n    MR = 'MRU';\r\n    MU = 'MUR';\r\n    YT = 'EUR';\r\n    MX = 'MXN';\r\n    FM = 'USD';\r\n    MD = 'MDL';\r\n    MC = 'EUR';\r\n    MN = 'MNT';\r\n    ME = 'EUR';\r\n    MS = 'XCD';\r\n    MA = 'MAD';\r\n    MZ = 'MZN';\r\n    MM = 'MMK';\r\n    NA = 'NAD';\r\n    NR = 'AUD';\r\n    NP = 'NPR';\r\n    NL = 'EUR';\r\n    NC = 'XPF';\r\n    NZ = 'NZD';\r\n    NI = 'NIO';\r\n    NE = 'XOF';\r\n    NG = 'NGN';\r\n    NU = 'NZD';\r\n    NF = 'AUD';\r\n    MP = 'USD';\r\n    NO = 'NOK';\r\n    OM = 'OMR';\r\n    PK = 'PKR';\r\n    PW = 'USD';\r\n    PA = 'PAB';\r\n    PG = 'PGK';\r\n    PY = 'PYG';\r\n    PE = 'PEN';\r\n    PH = 'PHP';\r\n    PN = 'NZD';\r\n    PL = 'PLN';\r\n    PT = 'EUR';\r\n    PR = 'USD';\r\n    QA = 'QAR';\r\n    RO = 'RON';\r\n    RU = 'RUB';\r\n    RW = 'RWF';\r\n    RE = 'EUR';\r\n    BL = 'EUR';\r\n    SH = 'SHP';\r\n    KN = 'XCD';\r\n    LC = 'XCD';\r\n    MF = 'EUR';\r\n    PM = 'EUR';\r\n    VC = 'XCD';\r\n    WS = 'WST';\r\n    SM = 'EUR';\r\n    ST = 'STN';\r\n    SA = 'SAR';\r\n    SN = 'XOF';\r\n    RS = 'RSD';\r\n    SC = 'SCR';\r\n    SL = 'SLL';\r\n    SG = 'SGD';\r\n    SX = 'ANG';\r\n    SK = 'EUR';\r\n    SI = 'EUR';\r\n    SB = 'SBD';\r\n    SO = 'SOS';\r\n    ZA = 'ZAR';\r\n    SS = 'SSP';\r\n    ES = 'EUR';\r\n    LK = 'LKR';\r\n    SD = 'SDG';\r\n    SR = 'SRD';\r\n    SJ = 'NOK';\r\n    SE = 'SEK';\r\n    CH = 'CHE';\r\n    SY = 'SYP';\r\n    TW = 'TWD';\r\n    TJ = 'TJS';\r\n    TZ = 'TZS';\r\n    TH = 'THB';\r\n    TL = 'USD';\r\n    TG = 'XOF';\r\n    TK = 'NZD';\r\n    TO = 'TOP';\r\n    TT = 'TTD';\r\n    TN = 'TND';\r\n    TR = 'TRY';\r\n    TM = 'TMT';\r\n    TC = 'USD';\r\n    TV = 'AUD';\r\n    UG = 'UGX';\r\n    UA = 'UAH';\r\n    AE = 'AED';\r\n    GB = 'GBP';\r\n    UM = 'USD';\r\n    US = 'USD';\r\n    UY = 'UYI';\r\n    UZ = 'UZS';\r\n    VU = 'VUV';\r\n    VE = 'VEF';\r\n    VN = 'VND';\r\n    VG = 'USD';\r\n    VI = 'USD';\r\n    WF = 'XPF';\r\n    EH = 'MAD';\r\n    YE = 'YER';\r\n    ZM = 'ZMW';\r\n    ZW = 'ZWL';\r\n    AX = 'EUR';\r\n}\r\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { ShareService } from '../services/share.service';\nimport { Observable } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  socket;\n  btc_usd = 0;\n  lc_btc = 0;\n  orders = [];\n  btc_received = [];\n  btc_sent = [];\n  conversion_fee = 0;\n  adder = 0;\n  subtracter = 0;\n  converted_lc = 0;\n  converted_btc = 0;\n  transfer_fee = 0;\n  remain_btc = 0;\n  received_btc = 0;\n  sent_btc = 0;\n  network_fee = 0;\n  receive_btc = 0;\n\n  constructor(private share: ShareService, private api: HttpService) {\n    this.socket = io(environment.backendUrl, { query: { token: this.share.admin_user.token } });\n    this.onMessage().subscribe((message) => {\n      if (message.event === 'lc_btc') {\n        this.lc_btc = message.data;\n      }\n      if (message.event === 'btc_usd') {\n        this.btc_usd = message.data;\n      } else {\n        // console.log('========from socket===========');\n        // console.log(message);\n        // console.log('========from socket===========');\n      }\n    });\n\n    this.api.get('https://api.blockcypher.com/v1/btc/test3/addrs/' + this.share.admin_user.wallet + '/balance').then((result: any) => {\n      this.remain_btc = result.balance * 1e-8;\n      this.received_btc = result.total_received * 1e-8;\n      this.sent_btc = result.total_sent * 1e-8;\n    });\n\n    this.api.getToBackend('/admin/getBTCReceived', this.share.admin_user.token).then((response: any) => {\n      this.btc_received = response;\n      this.network_fee = 0;\n      response.map((record) => {\n        console.log(record);\n        if (record.fee) {\n          this.network_fee += +record.fee;\n        }\n        console.log(this.network_fee);\n      });\n    });\n\n    this.api.getToBackend('/admin/getBTCSent', this.share.admin_user.token).then((response: any) => {\n      this.btc_sent = response;\n      this.transfer_fee = response.length * 0.0001;\n    });\n\n    this.api.getToBackend('/admin/getAllOrders', this.share.admin_user.token).then((response: any) => {\n      this.orders = response;\n      this.conversion_fee = 0;\n      this.converted_lc = 0;\n      this.converted_btc = 0;\n      this.receive_btc = 0;\n      response.map((order) => {\n        if (order.status === 'successful') { this.conversion_fee += order.fee; }\n        if (order.status === 'successful' && order.type === 'ltob') {\n          this.converted_lc += order.lcamount;\n          this.receive_btc += order.btc_receive;\n        }\n        if (order.status === 'successful' && order.type === 'btol') { this.converted_btc += order.lcamount * order.rate; }\n      });\n    });\n\n    this.api.getToBackend('/admin/getAdder', this.share.admin_user.token).then((response: any) => {\n      this.adder = response.payload;\n    });\n    this.api.getToBackend('/admin/getSubtracter', this.share.admin_user.token).then((response: any) => {\n      this.subtracter = response.payload;\n    });\n  }\n\n  disconnect() {\n    this.socket.disconnect();\n  }\n\n  onMessage(): Observable<any> {\n    return new Observable<any>(observer => {\n      this.socket.on('message', (data: any) => observer.next(data));\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { NotificationsService } from 'angular2-notifications';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  uri = environment.backendUrl + '/contact';\n\n  constructor(private http: HttpClient, private notify: NotificationsService) { }\n\n  sendMessage(email, title, message) {\n    const obj = {\n      email: email,\n      title: title,\n      message: message\n    };\n    this.http.post(`${this.uri}`, obj).subscribe(res => {\n      if (res['result']) {\n        this.notify.info('INFO', res['result'], { timeOut: 5000 });\n      } else {\n        console.log(res);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { NotificationsService } from 'angular2-notifications';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountryCurrencyPriceService {\n\n  // set endpoint and your API key\n  endpoint = 'latest';\n  access_key = '2c0eb0162ea5734e3b5cd2adfdaca3bb';\n  baseURL = 'http://data.fixer.io/api/';\n  private currentPriceUrl = 'http://api.coindesk.com/v1/bpi/currentprice.json';\n\n  // tslint:disable-next-line: deprecation\n  constructor(private http: Http, private notify: NotificationsService, private router: Router) { }\n\n  async getUserInfo(): Promise<string> {\n    const res = await this.http.get('http://ip-api.com/json').toPromise();\n    return res.json();\n  }\n\n  async getCurrencyValue(currency_code): Promise<any> {\n    const response = await this.http.get(this.baseURL + this.endpoint + '?access_key=' + this.access_key + '&base=' + 'USD')\n      .toPromise();\n    if (this.router.url === '/home') {\n      this.notify.success('INFO', '1 USD = ' + response.json().rates[currency_code] + ' ' + currency_code, { timeOut: 5000 });\n    }\n    return response.json().rates[currency_code];\n  }\n\n  async getPrice(currency: string): Promise<number> {\n    const response = await this.http.get(this.currentPriceUrl).toPromise();\n    return response.json().bpi[currency].rate;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { NotificationsService } from 'angular2-notifications';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForgotpwService {\n\n  uri = environment.backendUrl + '/forgot';\n\n  constructor(private http: HttpClient, private notify: NotificationsService) { }\n\n  recovery(email) {\n    const obj = {\n      email: email\n    };\n    this.http.post(`${this.uri}`, obj).subscribe(res => {\n      if (res['result']) {\n        this.notify.info('INFO', res['result'], { timeOut: 5000 });\n      } if (res['invalid']) {\n        this.notify.error('INFO', res['invalid'], { timeOut: 5000 });\n      } else {\n        console.log(res);\n      }\n    });\n  }\n}\n\n","import { Injectable } from '@angular/core';\n/* Mock Service */\nimport { MockService } from './mock.service';\nimport { environment } from '../../environments/environment';\nimport { Http, Headers } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  // tslint:disable-next-line: deprecation\n  constructor(private mock: MockService, private http: Http) { }\n\n  private initUrl(url) {\n    return environment.backendUrl + url;\n  }\n\n  post(url, data) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(this.mock.API['post'][url]);\n      }, 300);\n    });\n  }\n\n  postToBackend(url, data, token = false) {\n    // tslint:disable-next-line: deprecation\n    let headers = new Headers({});\n    if (!token) {\n      // tslint:disable-next-line: deprecation\n      headers = new Headers({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      });\n    } else {\n      // tslint:disable-next-line: deprecation\n      headers = new Headers({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `bearer ${token}`\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this.http\n        .post(this.initUrl(url), data, { headers })\n        .toPromise()\n        .then(response => {\n          resolve(response.json());\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  getToBackend(url, token = false) {\n    // tslint:disable-next-line: deprecation\n    let headers = new Headers({});\n    if (!token) {\n      // tslint:disable-next-line: deprecation\n      headers = new Headers({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      });\n    } else {\n      // tslint:disable-next-line: deprecation\n      headers = new Headers({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `bearer ${token}`\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this.http\n        .get(this.initUrl(url), { headers })\n        .toPromise()\n        .then(response => {\n          resolve(response.json());\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  get(url) {\n    return new Promise(resolve => {\n      this.http\n        .get(url)\n        .toPromise()\n        .then(response => {\n          resolve(response.json());\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MockService {\n  // tslint:disable-next-line: no-use-before-declare\n  API = API;\n  constructor() { }\n\n}\n\nconst API = {\n  post: {\n    '/login': {\n      email: 'deverpham@gmail.com',\n      id: 1,\n      wallet: 'mzp6BEt1EuMZraHDWM3fDQpMGrJ1DmTA3j',\n      token: '123459asd56asd654asd6',\n      expired: 1238489\n    },\n    '/register': {\n      email: 'deverpham@gmail.com',\n      id: 1,\n      wallet: 'mzp6BEt1EuMZraHDWM3fDQpMGrJ1DmTA3j',\n      token: '123459asd56asd654asd6',\n      expired: 1238489\n    }\n  },\n  get: {\n    '/analytics': {\n      wallets: [{\n        user_id: 1,\n        wallet: 'mzp6BEt1EuMZraHDWM3fDQpMGrJ1DmTA3j'\n      },\n      {\n        user_id: 2,\n        wallet: '2N54QBN3Ub4r9PbjXMshyaH2nLQaB9REcaw'\n      },\n      {\n        user_id: 3,\n        wallet: '2N7UbttR5FppWB7MPBG2C6MboJeUfaGP9uU'\n      }],\n      onlines: 100,\n      btcSent: 32.5,\n      registers: 200\n    }\n  }\n};\n","import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShareService {\n  user: any = false;\n  admin_user: any = false;\n\n  constructor(private storage: StorageService) {\n    this.user = this.storage.getUser();\n    this.admin_user = this.storage.getAdminUser();\n  }\n\n  updateUser(user) {\n    this.user = user;\n  }\n\n  updateAdminUser(user) {\n    this.admin_user = user;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs';\nimport { ShareService } from '../services/share.service';\nimport { environment } from '../../environments/environment';\nimport { NotificationsService } from 'angular2-notifications';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SocketService {\n  socket;\n  btc_balance = 0;\n  lc_balance = 0;\n  lc_btc = 0;\n  btc_usd = 0;\n  last_transaction: any;\n  last_btol_conversions: any = [];\n  last_ltob_conversions: any = [];\n  status_ltob = false;\n  status_btol = false;\n  online_user = 0;\n  total_user = 0;\n  btc_received_count = 0;\n  btc_sent_count = 0;\n  btc_received_today_count = 0;\n  btc_sent_today_count = 0;\n  multiplier;\n  BtcConversionTarget = 0;\n  RefillProductAvailavility = 0;\n  LcMaintainingBalance = 0;\n\n  constructor(private share: ShareService, private notify: NotificationsService, private router: Router) {\n    this.connect();\n  }\n\n  reconnect() {\n    this.socket.disconnect();\n    console.log('reconnect');\n    console.log(this.share.user);\n    setTimeout(() => {\n      this.connect();\n    }, 100);\n\n  }\n\n  connect() {\n    if (this.share.user) {\n      this.socket = io(environment.backendUrl, { query: { token: this.share.user.token } });\n    } else {\n      this.socket = io(environment.backendUrl);\n    }\n\n    this.onMessage()\n      .subscribe((message) => {\n        switch (message.event) {\n          case 'balance':\n            this.btc_balance = message.data.btc;\n            this.lc_balance = message.data.lc;\n            break;\n          case 'btc_balance':\n            if (message.data.reason !== '') {\n              if (this.btc_balance > message.data.amount) {\n                this.notify.error('BTC Balance changed!', message.data.reason, { timeOut: 3000 });\n              } else {\n                this.notify.success('BTC Balance changed!', message.data.reason, { timeOut: 3000 });\n              }\n            }\n            this.btc_balance = message.data.amount;\n            break;\n          case 'lc_balance':\n            if (message.data.reason !== '') {\n              if (this.lc_balance > message.data.amount) {\n                this.notify.error('LC Balance changed!', message.data.reason, { timeOut: 3000 });\n              } else {\n                this.notify.success('LC Balance changed!', message.data.reason, { timeOut: 3000 });\n              }\n            }\n            this.lc_balance = message.data.amount;\n            break;\n          case 'lc_btc changed':\n            if (this.lc_btc > message.data) {\n              // tslint:disable-next-line: max-line-length\n              this.notify.info('1 LC Price changed!', '1 LC price has decreased from ' + this.lc_btc + ' to ' + message.data, { timeOut: 3000 });\n            } else {\n              // tslint:disable-next-line: max-line-length\n              this.notify.info('1 LC Price changed!', '1 LC price has increased from ' + this.lc_btc + ' to ' + message.data, { timeOut: 3000 });\n            }\n            this.lc_btc = message.data;\n            break;\n          case 'transaction created':\n            this.last_transaction = message.data;\n            break;\n          case 'last transaction':\n            this.last_transaction = message.data;\n            break;\n          case 'last btol conversions':\n            this.last_btol_conversions = message.data;\n            this.status_btol = true;\n            break;\n          case 'last ltob conversions':\n            this.last_ltob_conversions = message.data;\n            this.status_ltob = true;\n            break;\n          case 'convert created':\n            const record = message.data;\n            if (record.type === 'btol') {\n              this.last_btol_conversions.unshift(record);\n            } else {\n              this.last_ltob_conversions.unshift(record);\n            }\n            if (this.last_btol_conversions.length >= 8) { this.last_btol_conversions.pop(); }\n            if (this.last_ltob_conversions.length >= 8) { this.last_ltob_conversions.pop(); }\n            break;\n          case 'lc_btc':\n            this.lc_btc = message.data;\n            break;\n          case 'online_user':\n            this.online_user = message.data;\n            break;\n          case 'total_user':\n            this.total_user = message.data;\n            break;\n          case 'btc_received_count':\n            this.btc_received_count = message.data;\n            break;\n          case 'btc_sent_count':\n            this.btc_sent_count = message.data;\n            break;\n          case 'btc_received_today_count':\n            this.btc_received_today_count = message.data;\n            break;\n          case 'btc_sent_today_count':\n            this.btc_sent_today_count = message.data;\n            break;\n          case 'btc_usd':\n            {\n              this.btc_usd = message.data;\n              if (this.router.url === '/home') {\n                this.notify.info('INFO', '1 BTC = ' + this.btc_usd + ' USD', { timeOut: 5000 });\n              }\n              break;\n            }\n          case 'multiplier':\n            this.multiplier = message.data;\n            break;\n          case 'multiplier changed':\n            this.multiplier = message.data;\n            break;\n          case 'bazaar_value_settings':\n            {\n              this.BtcConversionTarget = message.data['BtcConversionTarget'];\n              this.RefillProductAvailavility = message.data['RefillProductAvailavility'];\n              this.LcMaintainingBalance = message.data['LcMaintainingBalance'];\n            }\n            break;\n          default:\n            // code...\n            break;\n        }\n\n        if (message.event !== 'btc_usd') {\n          // console.log('========from socket===========');\n          // console.log(message);\n          // console.log('========from socket===========');\n        }\n      });\n  }\n\n  onMessage(): Observable<any> {\n    return new Observable<any>(observer => {\n      this.socket.on('message', (data: any) => observer.next(data));\n    });\n  }\n\n}\n","/**\n * Working with Local Storage API\n */\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  private set(name, data) {\n    return window.localStorage.setItem(name, JSON.stringify(data));\n  }\n\n  private get(name) {\n    const data = window.localStorage.getItem(name);\n    if (data) { return JSON.parse(data); } else { return null; }\n  }\n\n  saveAgentID(id) {\n    return this.set('agent_id', id);\n  }\n\n  getAgentID() {\n    return this.get('agent_id');\n  }\n\n  saveUser(data) {\n    return this.set('user', data);\n  }\n\n  saveAdminUser(data) {\n    return this.set('admin_user', data);\n  }\n\n  getUser() {\n    return this.get('user');\n  }\n\n  getAdminUser() {\n    return this.get('admin_user');\n  }\n\n  destroyUser() {\n    return window.localStorage.removeItem('user');\n  }\n\n  destroyAdminUser() {\n    return window.localStorage.removeItem('admin_user');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendUrl: 'http://www.phponline.site:8080',\n  frontendUrl: 'http://www.phponline.site',\n  node: 'testnet'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */"],"sourceRoot":""}